<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ecrion.XF.2.0</name>
    </assembly>
    <members>
        <member name="T:Ecrion.XF.Remoting.Implementation.RemotingProperties">
            <summary>
            A class that wrapps all the properties needed for remote rendering 
            </summary>
        </member>
        <member name="F:Ecrion.XF.Remoting.Implementation.RemotingProperties.properties">
            <summary>
            The auxiliary properties
            </summary>
        </member>
        <member name="P:Ecrion.XF.Remoting.Implementation.RemotingProperties.BaseUrl">
            <summary>
            The base URL to be used when computing relative paths. Usefull when input is a String or an IStream.
            </summary>
        </member>
        <member name="P:Ecrion.XF.Remoting.Implementation.RemotingProperties.InputFormat">
            <summary>
            The input file's format. The default value is <see cref="F:Ecrion.XF.InputFormat.AUTO"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.Remoting.Implementation.RemotingProperties.OutputFormat">
            <summary>
            Specifies the rendering's output format. The default value is <see cref="F:Ecrion.XF.OutputFormat.DEFAULT"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.Remoting.Implementation.RemotingProperties.Timeout">
            <summary>
            The timeout period assigned to the rendering job, in seconds. The default is 0 (no timeout). This property
            can be used to prevent the server being blocked by large jobs.
            </summary>
        </member>
        <member name="T:Ecrion.XF.FaxSender">
            <summary>
            Describes a fax sender.
            </summary>
        </member>
        <member name="F:Ecrion.XF.FaxSender.Name">
            <summary>
            Sender name
            </summary>
        </member>
        <member name="F:Ecrion.XF.FaxSender.Company">
            <summary>
            Sender company
            </summary>
        </member>
        <member name="T:Ecrion.XF.FaxReceiver">
            <summary>
            Describes a fax receiver.
            </summary>
        </member>
        <member name="F:Ecrion.XF.FaxReceiver.FaxNumber">
            <summary>
            Receiver fax number. Mandatory.
            </summary>
        </member>
        <member name="F:Ecrion.XF.FaxReceiver.Name">
            <summary>
            Receiver name
            </summary>
        </member>
        <member name="T:Ecrion.XF.PrintMode">
            <summary>
            Specifies the printer language to be used.
            </summary>
        </member>
        <member name="F:Ecrion.XF.PrintMode.POSTSCRIPT">
            <summary>
            Generates a Postscript file and send this as RAW data to the printer.
            The printer must support Postscript language.
            </summary>
        </member>
        <member name="F:Ecrion.XF.PrintMode.PCL">
            <summary>
            Generates a PCL file and send this as RAW data to the printer.
            The printer must support PCL language.
            </summary>
        </member>
        <member name="F:Ecrion.XF.PrintMode.GDI">
            <summary>
            Printing is done through Windows GDI. 
            This options ensures the compatibily with a wide range of printers.
            </summary>
        </member>
        <member name="P:Ecrion.XF.EngineProperties.OutputMimeType">
            <summary>
            The MIME type of the output document.
            </summary>
        </member>
        <member name="T:Ecrion.XF.XFEngine">
            <summary>
            Supports rendering of XSL-FO files into a wide variety of raster formats 
            (GIF, PNG, etc.) as well as PDF (Adobe's Portable Document Format)..
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFEngine.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Ecrion.XF.XFRenderer" /> object.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.String,System.String)">
            <summary>
            Render XML text into a file.
            </summary>
            <param name="xml">The input XML</param>
            <param name="outputFileName">The output file's name</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.String,System.IO.Stream)">
            <summary>
            Render XML text into a Stream.
            </summary>
            <param name="xml">The input XML</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.String,System.Web.HttpResponse)">
            <summary>
            Render XML text into Web Server's output stream.
            </summary>
            <param name="xml">The input XML</param>
            <param name="response">The ASPX Response object</param>
            
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.IO.Stream,System.String)">
            <summary>
            Render input stream's content into a file.
            </summary>
            <param name="inputStream">The input stream</param>
            <param name="outputFileName">The output file's name</param>
            
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.IO.Stream,System.IO.Stream)">
            <summary>
            Render input stream's content into a Stream.
            </summary>
            <param name="inputStream">The input stream</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.Render(System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Render input stream's content into Web Server's output stream.
            </summary>
            <param name="inputStream">The input stream</param>
            <param name="response">The ASPX Response object</param>
            
        </member>
        <member name="M:Ecrion.XF.XFEngine.RenderUrl(System.String,System.String)">
            <summary>
            Render the input document into a file.
            </summary>
            <param name="url">The URL(Uniform Resource Locator) of the input document.</param>
            <param name="outputFileName">The output file's name</param>
            
        </member>
        <member name="M:Ecrion.XF.XFEngine.RenderUrl(System.String,System.IO.Stream)">
            <summary>
            Render the input document into a Stream.
            </summary>
            <param name="url">The URL(Uniform Resource Locator) of the input document.</param>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.RenderUrl(System.String,System.Web.HttpResponse)">
            <summary>
            Render the input document into Web Server's output stream.
            </summary>
            <param name="url">The URL(Uniform Resource Locator) of the input document.</param>
            <param name="response">The ASPX Response object</param>
            
        </member>
        <member name="M:Ecrion.XF.XFEngine.Print(System.String,System.String,Ecrion.XF.PrintMode)">
            <summary>
            Prints a document loaded in the first parameter as a string
            </summary>
            <param name="xml">A valid XML document containing text to print.</param>
            <param name="printerName">The name of the printer that should print the document.</param>
            <param name="mode">The mode in witch printing would be made. It supports three modes GDI, PCL, POSTSCRIPT</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.Print(System.IO.Stream,System.String,Ecrion.XF.PrintMode)">
            <summary>
            Prints a document loaded in the first parameter as an Input Stream 
            </summary>
            <param name="inputStream">A stream containing XML text to print.</param>
            <param name="printerName">The name of the printer that should print the document.</param>
            <param name="mode">The mode in witch printing would be made. It supports three modes GDI, PCL, POSTSCRIPT</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.PrintUrl(System.String,System.String,Ecrion.XF.PrintMode)">
            <summary>
            Prints a document loaded from the url 
            </summary>
            <param name="url"></param>
            <param name="printerName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.SetProperty(System.String,System.Int32)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.SetProperty(System.String,System.Boolean)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.SetProperty(System.String,System.String)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFEngine.SetProperty(System.String,System.Double)">
            <summary>
            Set a rendering property like Zoom, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="P:Ecrion.XF.XFEngine.OutputMimeType">
            <summary>
            The MIME type of the output document.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.Log">
            <summary>
            The list of events occured during rendering.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.EncodingOverride">
            <summary>
            Input's document encoding override.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.BaseUrl">
            <summary>
            The base URL to be used when computing relative paths. Usefull when input is a String or an IStream.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.InputFormat">
            <summary>
            The input file's format. The default value is <see cref="F:Ecrion.XF.InputFormat.AUTO"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.OutputFormat">
            <summary>
            Specifies the rendering's output format. The default value is <see cref="F:Ecrion.XF.OutputFormat.DEFAULT"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFEngine.Timeout">
            <summary>
            The timeout period assigned to the rendering job, in seconds. The default is 0 (no timeout). This property
            can be used to prevent the server being blocked by large jobs.
            </summary>
        </member>
        <member name="T:Ecrion.XF.Settings">
            <summary>
            Contains configuration settings for XF .NET library.
            </summary>
        </member>
        <member name="F:Ecrion.XF.Settings.XFEngineInstallPath">
            <summary>
            Set this to a valid folder to load the XF engine in the same process as 
            your .NET application.
            </summary>
        </member>
        <member name="T:Ecrion.XF.InputFormat">
            <summary>
            Specifies the rendering engine's input format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.AUTO">
            <summary>
            Specifies that the input format should be auto-detected.  This is the default value for the input format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.SVG">
            <summary>
            The XML input is in SVG (Scalable Vector Graphics) format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.XSLFO">
            <summary>
            The XML input is in XSL-FO format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.XCHART">
            <summary>
            The XML input is in XCHART format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.XHTML">
            <summary>
            The XML input is a XHTML.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.RTF">
            <summary>
            The input is a RTF.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.WORDML">
            <summary>
            The input is a Word Document in XML format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.InputFormat.PDF">
            <summary>
            The input is a PDF document.
            </summary>
        </member>
        <member name="T:Ecrion.XF.MasterLog">
            <summary>
            Summary description for MasterLog.
            </summary>
        </member>
        <member name="T:Ecrion.XF.IStreamImpl">
            <summary>
            A IO.Stream to IStream (and viceversa) convertor.
            </summary>
        </member>
        <member name="T:Ecrion.XF.Remoting.Implementation.XFRemotingServer">
            <summary>
            The LoadBalancing Server
            </summary>
        </member>
        <member name="M:Ecrion.XF.Remoting.Implementation.XFRemotingServer.StartLoadBalancingService">
            <summary>
            Starts the LoadBalancing Server
            </summary>
        </member>
        <member name="T:Ecrion.XF.Util">
            <summary>
            Contains some subsidiary methods that might be useful.
            </summary>
        </member>
        <member name="M:Ecrion.XF.Util.GetOutputFormatFromFileName(System.String)">
            <summary>
            Gets the output format from a file specified by path.
            </summary>
            <param name="fileName">The path of the file.</param>
            <returns></returns>
        </member>
        <member name="T:Ecrion.XF.XFMergeContext">
            <summary>
            Merges multiple export operations in one file.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFMergeContext.Finalize">
            <summary>
            Performs cleanup of this instance.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFMergeContext.#ctor">
            <summary>
            Creates a new instance of XFMergeContext.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFMergeContext.SetOutput(System.String)">
            <summary>
            Sets the output file.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Ecrion.XF.XFMergeContext.SetOutput(System.IO.Stream)">
            <summary>
            Sets the output stream.
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:Ecrion.XF.XFMergeContext.Dispose">
            <summary>
            Ends the merge operation and releases the system resources.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFMergeContext.outputFormat">
            <summary>
            Sets or gets the output format
            </summary>
        </member>
        <member name="T:Ecrion.XF.Remoting.Implementation.AuxiliaryServerResults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ecrion.XF.Remoting.Implementation.AuxiliaryServerResults.logXml">
            <summary>
            The xml log retururned by the server
            </summary>
        </member>
        <member name="T:Ecrion.XF.DAL.SimpleDALJob">
            <summary>
            Ecrion.XF.DAL.SimpleDALJob is a stateless component which 
            can process a Digital Assembly Line (DAL) job XML in one step. 
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.SimpleDALJob.#ctor">
            <summary>
            Creates a DAL job object.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.SimpleDALJob.SetProperty(System.String,System.Int32)">
            <summary>
            Set a rendering property like BaseUrl, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.DAL.SimpleDALJob.SetProperty(System.String,System.String)">
            <summary>
            Set a rendering property like BaseUrl, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.DAL.SimpleDALJob.Process(System.String,System.String)">
            <summary>
            Process a DAL job XML in a single step.
            </summary>
            <param name="xml">Input DAL job XML</param>
            <param name="outputFileName">Output file name.</param>
        </member>
        <member name="M:Ecrion.XF.DAL.SimpleDALJob.Process(System.String,System.IO.Stream)">
            <summary>
            Process a DAL job XML in a single step.
            </summary>
            <param name="xml">Input DAL job XML</param>
            <param name="outputStream">Output stream.</param>
        </member>
        <member name="P:Ecrion.XF.DAL.SimpleDALJob.Log">
            <summary>
            The list of events occured during processing.
            </summary>
        </member>
        <member name="T:Ecrion.XF.Severity">
            <summary>
            The severity of an event.
            </summary>
        </member>
        <member name="F:Ecrion.XF.Severity.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ecrion.XF.Severity.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ecrion.XF.Severity.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ecrion.XF.Severity.All">
            <summary>
            Combination of Information, Warning and Error
            </summary>
        </member>
        <member name="T:Ecrion.XF.LogEvent">
            LogEvent
        </member>
        <member name="F:Ecrion.XF.LogEvent.severity">
            <summary>
            Even't severity.
            </summary>
        </member>
        <member name="F:Ecrion.XF.LogEvent.message">
            <summary>
            The message associated with this event.
            </summary>
        </member>
        <member name="M:Ecrion.XF.LogEvent.ToString">
            <summary>
            Retrieves a string representation of this event.  
            </summary>
        </member>
        <member name="T:Ecrion.XF.Log">
            <summary>
            Log of events generating during rendering for a single job. It is the type of <see cref="T:Ecrion.XF.Log"/>.
            </summary>
        </member>
        <member name="F:Ecrion.XF.Log.events">
            <summary>
            The list of events in the log; can be null. You don't need to access this member directly. 
            Use instead <see cref="M:Ecrion.XF.Log.GetEnumerator"/> or <see cref="M:Ecrion.XF.Log.Filter(Ecrion.XF.Severity)"/>.
            </summary>
        </member>
        <member name="M:Ecrion.XF.Log.IsEmpty">
            <summary>
            Returns true if the log is empty and false if not.
            </summary>
        </member>
        <member name="M:Ecrion.XF.Log.GetEnumerator">
            <summary>
            Returns an IEnumerator usable in foreach statements.
            </summary>
        </member>
        <member name="M:Ecrion.XF.Log.Filter(Ecrion.XF.Severity)">
            <summary>
            Returns a filtered view of the log. You can use combination of <see cref="T:Ecrion.XF.Severity"/> flags.
            </summary>
        </member>
        <member name="M:Ecrion.XF.Log.ToString">
            <summary>
            Retrieves a string representation of this log.  
            </summary>
        </member>
        <member name="M:Ecrion.XF.Log.op_Implicit(Ecrion.XF.Log)~System.String">
            <summary>
            Returns a plain text representation of this log.
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="P:Ecrion.XF.Log.xml">
            <summary>
            Retrieves a xml representation of this log.
            </summary>
        </member>
        <member name="P:Ecrion.XF.Log.text">
            <summary>
            Retrieves a plain text representation of this log.
            </summary>
        </member>
        <member name="T:Ecrion.XF.LogSubset">
            <summary>
            Represents a filtered view of a <see cref="T:Ecrion.XF.Log"/>
            </summary>
        </member>
        <member name="M:Ecrion.XF.LogSubset.#ctor(Ecrion.XF.Log,Ecrion.XF.Severity)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ecrion.XF.LogSubset.GetEnumerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ecrion.XF.LogSubset.IsEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ecrion.XF.LogSubset.ToString">
            <summary>
            Retrieves a string representation of the filtered log.
            </summary>
        </member>
        <member name="P:Ecrion.XF.LogSubset.xml">
            <summary>
            Retrieves a xml representation of the filtered log.
            </summary>
        </member>
        <member name="P:Ecrion.XF.LogSubsetEnumerator.xml">
            <summary>
            Retrieves a xml representation of this log.
            </summary>
        </member>
        <member name="T:Ecrion.XF.DAL.MultipartDALJob">
            <summary>
            Ecrion.XF.DAL.MultipartDALJob is a statefull component which 
            can process a Digital Assembly Line (DAL) job in an incremental fashion. 
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.#ctor">
            <summary>
            Creates a DAL job object.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Finalize">
            <summary>
            Performs releasing of the server resources associated with this document.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Dispose">
            <summary>
            Performs releasing of the server resources associated with this document.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Begin(System.String,System.String)">
            <summary>
            Starts processing of a DAL job
            </summary>
            <param name="xml">Input XML containing DAL job information</param>
            <param name="outputFileName">The destination file</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Begin(System.IO.Stream,System.String)">
            <summary>
            Starts processing of a DAL job
            </summary>
            <param name="xml">Input XML containing DAL job information</param>
            <param name="outputFileName">The destination file</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Begin(System.String,System.IO.Stream)">
            <summary>
            Starts processing of a DAL job
            </summary>
            <param name="xml">Input XML containing DAL job information</param>
            <param name="outputStream">The destination stream</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.Begin(System.IO.Stream,System.IO.Stream)">
            <summary>
            Starts processing of a DAL job
            </summary>
            <param name="xml">Input XML containing DAL job information</param>
            <param name="outputStream">The destination stream</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocumentUrl(System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="filePath">A document in one of supported XML formats (XSL-FO, SVG, etc).</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocumentUrl(System.String,System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="filePath">A document in one of supported XML formats (XSL-FO, SVG, etc).</param>
            <param name="id">A unique document id</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="xmlDocument">A document in one of supported XML formats (XSL-FO, SVG, etc).</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.String,System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="xmlDocument">A document in one of supported XML formats (XSL-FO, SVG, etc).</param>
            <param name="id">A unique document id</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.IO.Stream)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="document">A document in one of supported formats (XSL-FO, DocX, PDF, SVG, etc).</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.IO.Stream,System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="document">A document in one of supported formats (XSL-FO, DocX, PDF, SVG, etc).</param>
            <param name="id">A unique document id</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.Byte[])">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="document">A document in one of supported formats (XSL-FO, DocX, PDF, SVG, etc).</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.AddDocument(System.Byte[],System.String)">
            <summary>
            Adds a new document in the final output. All job settings 
            will applied to this documnent, as instructed in the DAL job XML 
            supplied to begin() call. The function fails if begin was not called
            already.
            </summary>
            <param name="document">A document in one of supported formats (XSL-FO, DocX, PDF, SVG, etc).</param>
            <param name="id">A unique document id</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.End">
            <summary>
            Closes the output document.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.SetProperty(System.String,System.Int32)">
            <summary>
            Set a rendering property like BaseUrl, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.DAL.MultipartDALJob.SetProperty(System.String,System.String)">
            <summary>
            Set a rendering property like BaseUrl, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="P:Ecrion.XF.DAL.MultipartDALJob.Log">
            <summary>
            The list of events occured during processing.
            </summary>
        </member>
        <member name="T:Ecrion.XF.OutputFormat">
            <summary>
            Specifies the rendering engine's output format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.DEFAULT">
            <summary>
            Specifies that if rendering to a file, then the output format should be detected from the file name. 
            If the file extension is not recognized, then the output format is PDF if the input is XSL-FO 
            or BITMAP, if the input is SVG. These are also the default values when the destination is a Stream.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.BITMAP">
            <summary>
            Specifies that the output format must be Windows Bitmap Format.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.GIF">
            <summary>
            Specifies that the output format must be GIF.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.PNG">
            <summary>
            Specifies that the output format must be PNG.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.JPEG">
            <summary>
            Specifies that the output format must be JPEG.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.PDF">
            <summary>
            Specifies that the output format must be PDF (Adobe's Portable Document Format).
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.HTML">
            <summary>
            Specifies that the output format must be HTML.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.POSTSCRIPT">
            <summary>
            Specifies that the output format must be PostScript. You should always render to a file instead of a stream
            because PostScript files can be very large. This will preserve server's memory and result in a more scalable
            application.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.SVG">
            <summary>
            Specifies that the output format must be SVG.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.TIFF">
            <summary>
            Specifies that the output format must be TIFF.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.PCL">
            <summary>
            Specifies that the output format must be PCL.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.AFP">
            <summary>
            Specifies that the output format must be Advanced Function Presentation (IBM High-Volume Printing Solutions).
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.TEXT">
            <summary>
            Specifies that the output format must be plain text.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.XSLFO">
            <summary>
            Specifies that the output format must be XSL-FO.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.XPS">
            <summary>
            Specifies that the output format must be XPS.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.IOCA">
            <summary>
            Specifies that the output format must be a raster IOCA image embedded in a MO:DCA document.
            </summary>
        </member>
        <member name="F:Ecrion.XF.OutputFormat.INX">
            <summary>
            Specifies that the output format must be Adobe Interchange (INX).
            </summary>
        </member>
        <member name="T:Ecrion.XF.Remoting.Implementation.XFRemotingObject">
            <summary>
            The proxi used by the client and executed on the server 
            </summary>
        </member>
        <member name="M:Ecrion.XF.Remoting.Implementation.XFRemotingObject.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ecrion.XF.Remoting.Implementation.XFRemotingObject.RemoteRender(System.Byte[],Ecrion.XF.Remoting.Implementation.RemotingProperties,Ecrion.XF.Remoting.Implementation.AuxiliaryServerResults@)">
            <summary>
            Renders the bytes representing the processed document
            </summary>
            <param name="inputBytes">The bytes representing the xml document send to the server</param>
            <param name="remProperties">The properties of the document send to the server</param>
            <param name="results">Auxiliary server results</param>
            <returns></returns>
        </member>
        <member name="M:Ecrion.XF.Remoting.Implementation.XFRemotingObject.RemoteUrlRender(System.String,Ecrion.XF.Remoting.Implementation.RemotingProperties,Ecrion.XF.Remoting.Implementation.AuxiliaryServerResults@)">
            <summary>
            Renders the bytes representing the processed document
            </summary>
            <param name="url">The url that contains xml document send to the server</param>
            <param name="remProperties">The properties of the document send to the server</param>
            <param name="results">Auxiliary server results</param>
            <returns></returns>
        </member>
        <member name="T:Ecrion.XF.XFDocument">
            <summary>
            The properties of the generated XSL-FO 
            documents
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFDocument.#ctor">
            <sumary>
             Void constructor
            </sumary>
        </member>
        <member name="M:Ecrion.XF.XFDocument.Finalize">
            <summary>
            Performs releasing of the server resources associated with this document.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFDocument.Dispose">
            <summary>
            Performs releasing of the server resources associated with this document.
            </summary>
        </member>
        <member name="M:Ecrion.XF.XFDocument.SetProperty(System.String,System.Int32)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.SetProperty(System.String,System.Boolean)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.SetProperty(System.String,System.String)">
            <summary>
            Set a rendering property like ColorDepth, Compression, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.SetProperty(System.String,System.Double)">
            <summary>
            Set a rendering property like Zoom, etc. For more details see technical documentation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="val">The new value</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.PrintTo(System.String,Ecrion.XF.PrintMode)">
            <summary>
            Prints a document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            </summary>
            <param name="printerName">Name of the printer to use .</param>
            <param name="mode">Printer language.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.SendFax(Ecrion.XF.FaxSender,Ecrion.XF.FaxReceiver)">
            <summary>
            Send a fax with the document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            </summary>
            <param name="faxSender">Sender information.</param>
            <param name="faxRecipient">Recipient information.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.ExportTo(System.String)">
            <summary>
            Exports a document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            Output format can be recognized from the output file's extension. 
            </summary>
            <param name="outputFileName">Name of the file to receive rendering output.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.ExportTo(System.IO.Stream)">
            <summary>
            Exports a document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            Output format must be set before calling this function.
            </summary>
            <param name="outputStream">Stream to receive rendering output.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.ExportTo(System.Web.HttpResponse)">
            <summary>
            Exports a document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            Output format must be set before calling this function.
            </summary>
            <param name="response">The Web server's response object.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.ExportTo(Ecrion.XF.XFMergeContext)">
            <summary>
            Exports a document previously loaded with <see cref="M:Ecrion.XF.XFDocument.Load(System.String)"/>.
            The content is appended in the merge context
            </summary>
            <param name="ctx">A merge context that will receive the output.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.GetPageCount">
            <summary>
            Returns the number of pages for a loaded document.
            </summary>
            <returns>Number of pages.</returns>
        </member>
        <member name="M:Ecrion.XF.XFDocument.GetPageWidth(System.Int32)">
            <summary>
            Returns the width of a page in pixels.
            </summary>
            <param name="idx">Page index</param>
            <returns>Width of the specified page.</returns>
        </member>
        <member name="M:Ecrion.XF.XFDocument.GetPageHeight(System.Int32)">
            <summary>
            Returns the height of a page in pixels.
            </summary>
            <param name="idx">Page index</param>
            <returns>Height of the specified page.</returns>
        </member>
        <member name="M:Ecrion.XF.XFDocument.LoadUrl(System.String)">
            <summary>
            Load the XML document specified by the given url 
            For a list of supported XML documents see <see cref="P:Ecrion.XF.XFDocument.InputFormat"/> enumeration.
            </summary>
            <param name="url">Path to document to be loaded.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.Load(System.String)">
            <summary>
            Load the XML document contained in the given string. 
            For a list of supported XML documents see <see cref="P:Ecrion.XF.XFDocument.InputFormat"/> enumeration.
            </summary>
            <param name="xml">String containing document to load.</param>
        </member>
        <member name="M:Ecrion.XF.XFDocument.Load(System.IO.Stream)">
            <summary>
            Load the XML document contained in the given stream. 
            For a list of supported XML documents see <see cref="P:Ecrion.XF.XFDocument.InputFormat"/> enumeration.
            </summary>
            <param name="inputStream">Stream containing document to load.</param>
        </member>
        <member name="P:Ecrion.XF.XFDocument.Log">
            <summary>
            The list of events occured during rendering.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFDocument.EncodingOverride">
            <summary>
            Input's document encoding override.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFDocument.BaseUrl">
            <summary>
            The base URL to be used when computing relative paths. Usefull when input is a String or an IStream.
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFDocument.InputFormat">
            <summary>
            The input file's format. The default value is <see cref="F:Ecrion.XF.InputFormat.AUTO"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFDocument.OutputFormat">
            <summary>
            Specifies the rendering's output format. The default value is <see cref="F:Ecrion.XF.OutputFormat.DEFAULT"/>
            </summary>
        </member>
        <member name="P:Ecrion.XF.XFDocument.Timeout">
            <summary>
            The timeout period assigned to the rendering job, in seconds. The default is 0 (no timeout). This property
            can be used to prevent the server being blocked by large jobs.
            </summary>
        </member>
        <member name="T:Ecrion.XF.DALException">
            <summary>
            A exception thrown durin processing of a DAL (Digital Assembly Line) job.
            </summary>
        </member>
        <member name="M:Ecrion.XF.DALException.#ctor(System.String)">
            <summary>
            Public constructor
            </summary>
            <param name="message">The error message</param>
        </member>
    </members>
</doc>
