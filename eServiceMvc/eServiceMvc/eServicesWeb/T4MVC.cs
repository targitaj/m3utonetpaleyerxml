// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Uma.Eservices.Web.Features.Account.AccountController Account = new Uma.Eservices.Web.Features.Account.T4MVC_AccountController();
    public static Uma.Eservices.Web.Features.Account.StrongAuthenticationController StrongAuthentication = new Uma.Eservices.Web.Features.Account.T4MVC_StrongAuthenticationController();
    public static Uma.Eservices.Web.Features.Dashboard.DashboardController Dashboard = new Uma.Eservices.Web.Features.Dashboard.T4MVC_DashboardController();
    public static Uma.Eservices.Web.Features.Home.HomeController Home = new Uma.Eservices.Web.Features.Home.T4MVC_HomeController();
    public static Uma.Eservices.Web.Features.Info.InfoController Info = new Uma.Eservices.Web.Features.Info.T4MVC_InfoController();
    public static Uma.Eservices.Web.Features.Localization.LocalizationController Localization = new Uma.Eservices.Web.Features.Localization.T4MVC_LocalizationController();
    public static Uma.Eservices.Web.Features.OLE.OLEController OLE = new Uma.Eservices.Web.Features.OLE.T4MVC_OLEController();
    public static Uma.Eservices.Web.Features.Sandbox.SandboxController Sandbox = new Uma.Eservices.Web.Features.Sandbox.T4MVC_SandboxController();
    public static T4MVC.CommonController Common = new T4MVC.CommonController();
    public static T4MVC.KANController KAN = new T4MVC.KANController();
    public static T4MVC.MastersController Masters = new T4MVC.MastersController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FilePathResult : System.Web.Mvc.FilePathResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FilePathResult(string area, string controller, string action, string protocol = null): base(" ", " ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_EmptyResult : System.Web.Mvc.EmptyResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_EmptyResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string account_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/account.min.js") ? Url("account.min.js") : Url("account.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class blueimp {
            private const string URLPATH = "~/Scripts/blueimp";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string canvas_to_blob_min_js = Url("canvas-to-blob.min.js");
            public static readonly string jquery_fileupload_angular_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-angular.min.js") ? Url("jquery.fileupload-angular.min.js") : Url("jquery.fileupload-angular.js");
            public static readonly string jquery_fileupload_audio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-audio.min.js") ? Url("jquery.fileupload-audio.min.js") : Url("jquery.fileupload-audio.js");
            public static readonly string jquery_fileupload_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-image.min.js") ? Url("jquery.fileupload-image.min.js") : Url("jquery.fileupload-image.js");
            public static readonly string jquery_fileupload_jquery_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-jquery-ui.min.js") ? Url("jquery.fileupload-jquery-ui.min.js") : Url("jquery.fileupload-jquery-ui.js");
            public static readonly string jquery_fileupload_process_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-process.min.js") ? Url("jquery.fileupload-process.min.js") : Url("jquery.fileupload-process.js");
            public static readonly string jquery_fileupload_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-ui.min.js") ? Url("jquery.fileupload-ui.min.js") : Url("jquery.fileupload-ui.js");
            public static readonly string jquery_fileupload_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-validate.min.js") ? Url("jquery.fileupload-validate.min.js") : Url("jquery.fileupload-validate.js");
            public static readonly string jquery_fileupload_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload-video.min.js") ? Url("jquery.fileupload-video.min.js") : Url("jquery.fileupload-video.js");
            public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
            public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
            public static readonly string jquery_ui_widget_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.widget.min.js") ? Url("jquery.ui.widget.min.js") : Url("jquery.ui.widget.js");
            public static readonly string load_image_min_js = Url("load-image.min.js");
            public static readonly string tmpl_min_js = Url("tmpl.min.js");
        }
    
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_datepicker_min_js = Url("bootstrap-datepicker.min.js");
        public static readonly string bootstrap_maxlength_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-maxlength.min.js") ? Url("bootstrap-maxlength.min.js") : Url("bootstrap-maxlength.js");
        public static readonly string bootstrap_maxlength_min_js = Url("bootstrap-maxlength.min.js");
        public static readonly string bootstrap_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-select.min.js") ? Url("bootstrap-select.min.js") : Url("bootstrap-select.js");
        public static readonly string bootstrap_select_min_js = Url("bootstrap-select.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.validate.min.js") ? Url("bootstrap.validate.min.js") : Url("bootstrap.validate.js");
        public static readonly string bootstrap_validate_min_js = Url("bootstrap.validate.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckedit {
            private const string URLPATH = "~/Scripts/ckedit";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                private const string URLPATH = "~/Scripts/ckedit/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                private const string URLPATH = "~/Scripts/ckedit/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/ckedit/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                public static readonly string icons_png = Url("icons.png");
                public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_png = Url("anchor.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckedit/plugins/link/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string anchor_png = Url("anchor.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                             
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class sourcedialog {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/sourcedialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/sourcedialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sourcedialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sourcedialog.min.js") ? Url("sourcedialog.min.js") : Url("sourcedialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class texttransform {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/texttransform";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/texttransform/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string transformCapitalize_png = Url("transformCapitalize.png");
                        public static readonly string transformSwitcher_png = Url("transformSwitcher.png");
                        public static readonly string transformToLower_png = Url("transformToLower.png");
                        public static readonly string transformToUpper_png = Url("transformToUpper.png");
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class widget {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/widget";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/widget/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string handle_png = Url("handle.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wordcount {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/wordcount";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/wordcount/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string wordcount_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wordcount.min.css") ? Url("wordcount.min.css") : Url("wordcount.css");
                             
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    private const string URLPATH = "~/Scripts/ckedit/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckedit/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                             
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                        public static readonly string wsc_ie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc_ie.min.js") ? Url("wsc_ie.min.js") : Url("wsc_ie.js");
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/ckedit/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class moono {
                    private const string URLPATH = "~/Scripts/ckedit/skins/moono";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                         
                    public static readonly string dialog_ie_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie.min.css") ? Url("dialog_ie.min.css") : Url("dialog_ie.css");
                         
                    public static readonly string dialog_ie7_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie7.min.css") ? Url("dialog_ie7.min.css") : Url("dialog_ie7.css");
                         
                    public static readonly string dialog_ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie8.min.css") ? Url("dialog_ie8.min.css") : Url("dialog_ie8.css");
                         
                    public static readonly string dialog_iequirks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_iequirks.min.css") ? Url("dialog_iequirks.min.css") : Url("dialog_iequirks.css");
                         
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                         
                    public static readonly string editor_gecko_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_gecko.min.css") ? Url("editor_gecko.min.css") : Url("editor_gecko.css");
                         
                    public static readonly string editor_ie_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie.min.css") ? Url("editor_ie.min.css") : Url("editor_ie.css");
                         
                    public static readonly string editor_ie7_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie7.min.css") ? Url("editor_ie7.min.css") : Url("editor_ie7.css");
                         
                    public static readonly string editor_ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie8.min.css") ? Url("editor_ie8.min.css") : Url("editor_ie8.css");
                         
                    public static readonly string editor_iequirks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_iequirks.min.css") ? Url("editor_iequirks.min.css") : Url("editor_iequirks.css");
                         
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckedit/skins/moono/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_png = Url("arrow.png");
                        public static readonly string close_png = Url("close.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckedit/skins/moono/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string close_png = Url("close.png");
                            public static readonly string lock_open_png = Url("lock-open.png");
                            public static readonly string lock_png = Url("lock.png");
                            public static readonly string refresh_png = Url("refresh.png");
                        }
                    
                        public static readonly string lock_open_png = Url("lock-open.png");
                        public static readonly string lock_png = Url("lock.png");
                        public static readonly string refresh_png = Url("refresh.png");
                    }
                
                    public static readonly string readme_md = Url("readme.md");
                }
            
            }
        
            public static readonly string styles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/styles.min.js") ? Url("styles.min.js") : Url("styles.js");
        }
    
        public static readonly string DynamicControls_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DynamicControls.min.js") ? Url("DynamicControls.min.js") : Url("DynamicControls.js");
        public static readonly string Expander_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Expander.min.js") ? Url("Expander.min.js") : Url("Expander.js");
        public static readonly string forms_scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms-scripts.min.js") ? Url("forms-scripts.min.js") : Url("forms-scripts.js");
        public static readonly string forms_scripts_min_js = Url("forms-scripts.min.js");
        public static readonly string inputmask_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/inputmask.min.js") ? Url("inputmask.min.js") : Url("inputmask.js");
        public static readonly string jquery_1_11_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.1.intellisense.min.js") ? Url("jquery-1.11.1.intellisense.min.js") : Url("jquery-1.11.1.intellisense.js");
        public static readonly string jquery_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.1.min.js") ? Url("jquery-1.11.1.min.js") : Url("jquery-1.11.1.js");
        public static readonly string jquery_1_11_1_min_js = Url("jquery-1.11.1.min.js");
        public static readonly string jquery_1_11_1_min_map = Url("jquery-1.11.1.min.map");
        public static readonly string jquery_livequery_min_js = Url("jquery.livequery.min.js");
        public static readonly string jquery_pnotify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pnotify.min.js") ? Url("jquery.pnotify.min.js") : Url("jquery.pnotify.js");
        public static readonly string jquery_pnotify_min_js = Url("jquery.pnotify.min.js");
        public static readonly string jquery_serializeObject_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.serializeObject.min.js") ? Url("jquery.serializeObject.min.js") : Url("jquery.serializeObject.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class locales {
            private const string URLPATH = "~/Scripts/locales";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.fi.min.js") ? Url("bootstrap-datepicker.fi.min.js") : Url("bootstrap-datepicker.fi.js");
            public static readonly string bootstrap_datepicker_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.sv.min.js") ? Url("bootstrap-datepicker.sv.min.js") : Url("bootstrap-datepicker.sv.js");
        }
    
        public static readonly string moment_with_langs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment-with-langs.min.js") ? Url("moment-with-langs.min.js") : Url("moment-with-langs.js");
        public static readonly string moment_with_langs_min_js = Url("moment-with-langs.min.js");
        public static readonly string typeahead_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/typeahead.bundle.min.js") ? Url("typeahead.bundle.min.js") : Url("typeahead.bundle.js");
        public static readonly string typeahead_bundle_min_js = Url("typeahead.bundle.min.js");
        public static readonly string ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.js") ? Url("ui.min.js") : Url("ui.js");
        public static readonly string webfont_min_js = Url("webfont.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class pdfs {
            private const string URLPATH = "~/Content/pdfs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class uploads {
            private const string URLPATH = "~/Content/uploads";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string DummyFile_txt = Url("DummyFile.txt");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}


namespace Uma.Eservices.Web.Features.Account
{
    public partial class AccountController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Login()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SendCodeChoice()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCodeChoice);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SendCode()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCode);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyCode()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyCode);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ConfirmEmail()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmEmail);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ConfirmationEmailResend()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmationEmailResend);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ResetPassword()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UserProfileFullSave()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserProfileFullSave);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> StrongUserCreate()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StrongUserCreate);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "account";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Login = ("Login").ToLowerInvariant();
            public readonly string SendCodeChoice = ("SendCodeChoice").ToLowerInvariant();
            public readonly string SendCode = ("SendCode").ToLowerInvariant();
            public readonly string VerifyCode = ("VerifyCode").ToLowerInvariant();
            public readonly string Register = ("Register").ToLowerInvariant();
            public readonly string ConfirmEmail = ("ConfirmEmail").ToLowerInvariant();
            public readonly string ConfirmationEmailResend = ("ConfirmationEmailResend").ToLowerInvariant();
            public readonly string LogOff = ("LogOff").ToLowerInvariant();
            public readonly string ForgotPassword = ("ForgotPassword").ToLowerInvariant();
            public readonly string ResetPassword = ("ResetPassword").ToLowerInvariant();
            public readonly string ResetPasswordConfirmation = ("ResetPasswordConfirmation").ToLowerInvariant();
            public readonly string ChangePassword = ("ChangePassword").ToLowerInvariant();
            public readonly string UserProfile = ("UserProfile").ToLowerInvariant();
            public readonly string UserProfileFullEdit = ("UserProfileFullEdit").ToLowerInvariant();
            public readonly string UserProfileFullSave = ("UserProfileFullSave").ToLowerInvariant();
            public readonly string StrongUserCreate = ("StrongUserCreate").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string ChangePassword = "ChangePassword";
                public readonly string ConfirmEmail = "ConfirmEmail";
                public readonly string DisplayEmailConfirmation = "DisplayEmailConfirmation";
                public readonly string EmailNotConfirmed = "EmailNotConfirmed";
                public readonly string EmailVerified = "EmailVerified";
                public readonly string ForgotPassword = "ForgotPassword";
                public readonly string ForgotPasswordConfirmation = "ForgotPasswordConfirmation";
                public readonly string Lockout = "Lockout";
                public readonly string LoginForm = "LoginForm";
                public readonly string RegistrationForm = "RegistrationForm";
                public readonly string ResetPassword = "ResetPassword";
                public readonly string ResetPasswordConfirmation = "ResetPasswordConfirmation";
                public readonly string SendCodeChoice = "SendCodeChoice";
                public readonly string UserProfile = "UserProfile";
                public readonly string UserProfileFullEdit = "UserProfileFullEdit";
                public readonly string UserProfileStrong = "UserProfileStrong";
                public readonly string UserProfileStrongEdit = "UserProfileStrongEdit";
                public readonly string VerifyCode = "VerifyCode";
                public readonly string VetumaCancel = "VetumaCancel";
            }
            public readonly string ChangePassword = "~/Features/Account/ChangePassword.cshtml";
            public readonly string ConfirmEmail = "~/Features/Account/ConfirmEmail.cshtml";
            public readonly string DisplayEmailConfirmation = "~/Features/Account/DisplayEmailConfirmation.cshtml";
            public readonly string EmailNotConfirmed = "~/Features/Account/EmailNotConfirmed.cshtml";
            public readonly string EmailVerified = "~/Features/Account/EmailVerified.cshtml";
            public readonly string ForgotPassword = "~/Features/Account/ForgotPassword.cshtml";
            public readonly string ForgotPasswordConfirmation = "~/Features/Account/ForgotPasswordConfirmation.cshtml";
            public readonly string Lockout = "~/Features/Account/Lockout.cshtml";
            public readonly string LoginForm = "~/Features/Account/LoginForm.cshtml";
            public readonly string RegistrationForm = "~/Features/Account/RegistrationForm.cshtml";
            public readonly string ResetPassword = "~/Features/Account/ResetPassword.cshtml";
            public readonly string ResetPasswordConfirmation = "~/Features/Account/ResetPasswordConfirmation.cshtml";
            public readonly string SendCodeChoice = "~/Features/Account/SendCodeChoice.cshtml";
            public readonly string UserProfile = "~/Features/Account/UserProfile.cshtml";
            public readonly string UserProfileFullEdit = "~/Features/Account/UserProfileFullEdit.cshtml";
            public readonly string UserProfileStrong = "~/Features/Account/UserProfileStrong.cshtml";
            public readonly string UserProfileStrongEdit = "~/Features/Account/UserProfileStrongEdit.cshtml";
            public readonly string VerifyCode = "~/Features/Account/VerifyCode.cshtml";
            public readonly string VetumaCancel = "~/Features/Account/VetumaCancel.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AccountController : Uma.Eservices.Web.Features.Account.AccountController
    {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LoginOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.LoginViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Login(Uma.Eservices.Models.Account.LoginViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            LoginOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void SendCodeChoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SendCodeChoice(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCodeChoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            SendCodeChoiceOverride(callInfo, returnUrl);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void SendCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.SendCodeViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SendCode(Uma.Eservices.Models.Account.SendCodeViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SendCodeOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void VerifyCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string provider, string returnUrl);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyCode(string provider, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "provider", provider);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            VerifyCodeOverride(callInfo, provider, returnUrl);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void VerifyCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.VerifyCodeViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyCode(Uma.Eservices.Models.Account.VerifyCodeViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            VerifyCodeOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            RegisterOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.RegistrationViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Register(Uma.Eservices.Models.Account.RegistrationViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RegisterOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ConfirmEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId, string code);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ConfirmEmail(string userId, string code)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "code", code);
            ConfirmEmailOverride(callInfo, userId, code);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ConfirmationEmailResendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string emailAddress);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ConfirmationEmailResend(string emailAddress)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmationEmailResend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "emailAddress", emailAddress);
            ConfirmationEmailResendOverride(callInfo, emailAddress);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void LogOffOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LogOff()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LogOff);
            LogOffOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ForgotPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForgotPassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForgotPassword);
            ForgotPasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ForgotPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.ForgotPasswordViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ForgotPassword(Uma.Eservices.Models.Account.ForgotPasswordViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForgotPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ForgotPasswordOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ResetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string code);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPassword(string code)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "code", code);
            ResetPasswordOverride(callInfo, code);
            return callInfo;
        }

        [NonAction]
        partial void ResetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.ResetPasswordViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ResetPassword(Uma.Eservices.Models.Account.ResetPasswordViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ResetPasswordOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void ResetPasswordConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPasswordConfirmation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPasswordConfirmation);
            ResetPasswordConfirmationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ChangePasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.ChangePasswordViewModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ChangePassword(Uma.Eservices.Models.Account.ChangePasswordViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangePasswordOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UserProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UserProfile()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserProfile);
            UserProfileOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UserProfileFullEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UserProfileFullEdit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserProfileFullEdit);
            UserProfileFullEditOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UserProfileFullSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.UserProfileModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UserProfileFullSave(Uma.Eservices.Models.Account.UserProfileModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserProfileFullSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UserProfileFullSaveOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void StrongUserCreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Account.UserProfileModel model);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> StrongUserCreate(Uma.Eservices.Models.Account.UserProfileModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StrongUserCreate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            StrongUserCreateOverride(callInfo, model);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Account
{
    public partial class StrongAuthenticationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected StrongAuthenticationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public StrongAuthenticationController Actions { get { return MVC.StrongAuthentication; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "strongauthentication";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "strongauthentication";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Authenticate = ("Authenticate").ToLowerInvariant();
            public readonly string VetumaCancel = ("VetumaCancel").ToLowerInvariant();
            public readonly string ProcessResult = ("ProcessResult").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_StrongAuthenticationController : Uma.Eservices.Web.Features.Account.StrongAuthenticationController
    {
        public T4MVC_StrongAuthenticationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void AuthenticateOverride(T4MVC_System_Web_Mvc_EmptyResult callInfo);

        [NonAction]
        public override System.Web.Mvc.EmptyResult Authenticate()
        {
            var callInfo = new T4MVC_System_Web_Mvc_EmptyResult(Area, Name, ActionNames.Authenticate);
            AuthenticateOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void VetumaCancelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult VetumaCancel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VetumaCancel);
            VetumaCancelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ProcessResultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ProcessResult()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProcessResult);
            ProcessResultOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Dashboard
{
    public partial class DashboardController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DashboardController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DownloadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DashboardController Actions { get { return MVC.Dashboard; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "dashboard";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string Index2 = ("Index2").ToLowerInvariant();
            public readonly string NewApplication = ("NewApplication").ToLowerInvariant();
            public readonly string ResidencePermit = ("ResidencePermit").ToLowerInvariant();
            public readonly string ResidenceForWork = ("ResidenceForWork").ToLowerInvariant();
            public readonly string ResidenceSpecialist = ("ResidenceSpecialist").ToLowerInvariant();
            public readonly string ResidenceStudy = ("ResidenceStudy").ToLowerInvariant();
            public readonly string SupplementalDocuments = ("SupplementalDocuments").ToLowerInvariant();
            public readonly string UploadFile = ("UploadFile").ToLowerInvariant();
            public readonly string DeleteFile = ("DeleteFile").ToLowerInvariant();
            public readonly string DownloadFile = ("DownloadFile").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Dashboard = "Dashboard";
                public readonly string SupplementalDocuments = "SupplementalDocuments";
            }
            public readonly string Dashboard = "~/Features/Dashboard/Dashboard.cshtml";
            public readonly string SupplementalDocuments = "~/Features/Dashboard/SupplementalDocuments.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DashboardController : Uma.Eservices.Web.Features.Dashboard.DashboardController
    {
        public T4MVC_DashboardController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Index2Override(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index2()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index2);
            Index2Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void NewApplicationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult NewApplication()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewApplication);
            NewApplicationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ResidencePermitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResidencePermit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResidencePermit);
            ResidencePermitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ResidenceForWorkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResidenceForWork()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResidenceForWork);
            ResidenceForWorkOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ResidenceSpecialistOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResidenceSpecialist()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResidenceSpecialist);
            ResidenceSpecialistOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ResidenceStudyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResidenceStudy()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResidenceStudy);
            ResidenceStudyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SupplementalDocumentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SupplementalDocuments()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SupplementalDocuments);
            SupplementalDocumentsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UploadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? entityId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadFile(int? entityId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entityId", entityId);
            UploadFileOverride(callInfo, entityId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(string fileUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            DeleteFileOverride(callInfo, fileUrl);
            return callInfo;
        }

        [NonAction]
        partial void DownloadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl, string mimetype);

        [NonAction]
        public override System.Web.Mvc.ActionResult DownloadFile(string fileUrl, string mimetype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mimetype", mimetype);
            DownloadFileOverride(callInfo, fileUrl, mimetype);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Home
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string TopNavigation = ("TopNavigation").ToLowerInvariant();
            public readonly string SetEnglish = ("SetEnglish").ToLowerInvariant();
            public readonly string SetFinnish = ("SetFinnish").ToLowerInvariant();
            public readonly string SetSwedish = ("SetSwedish").ToLowerInvariant();
            public readonly string Footer = ("Footer").ToLowerInvariant();
            public readonly string NotFound = ("NotFound").ToLowerInvariant();
            public readonly string ShowWebMessages = ("ShowWebMessages").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _WebMessages = "_WebMessages";
                public readonly string Index = "Index";
                public readonly string PageNotFound = "PageNotFound";
            }
            public readonly string _WebMessages = "~/Features/Home/_WebMessages.cshtml";
            public readonly string Index = "~/Features/Home/Index.cshtml";
            public readonly string PageNotFound = "~/Features/Home/PageNotFound.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : Uma.Eservices.Web.Features.Home.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TopNavigationOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult TopNavigation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.TopNavigation);
            TopNavigationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetEnglishOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetEnglish()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetEnglish);
            SetEnglishOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetFinnishOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetFinnish()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFinnish);
            SetFinnishOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetSwedishOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetSwedish()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetSwedish);
            SetSwedishOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FooterOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult Footer()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.Footer);
            FooterOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void NotFoundOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult NotFound()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.NotFound);
            NotFoundOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShowWebMessagesOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult ShowWebMessages()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.ShowWebMessages);
            ShowWebMessagesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Info
{
    public partial class InfoController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InfoController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InfoController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InfoController Actions { get { return MVC.Info; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "info";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "info";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string Help = ("Help").ToLowerInvariant();
            public readonly string Terms = ("Terms").ToLowerInvariant();
            public readonly string Privacy = ("Privacy").ToLowerInvariant();
            public readonly string ResidencePermit = ("ResidencePermit").ToLowerInvariant();
            public readonly string WorkPermit = ("WorkPermit").ToLowerInvariant();
            public readonly string StudyPermit = ("StudyPermit").ToLowerInvariant();
            public readonly string WorkPermitSpecialist = ("WorkPermitSpecialist").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Help = "Help";
                public readonly string Privacy = "Privacy";
                public readonly string ResidencePermitForWork = "ResidencePermitForWork";
                public readonly string ResidencePermitSpecialist = "ResidencePermitSpecialist";
                public readonly string ResidencePermitStudy = "ResidencePermitStudy";
                public readonly string ResidencePermitTypeSelection = "ResidencePermitTypeSelection";
                public readonly string Terms = "Terms";
            }
            public readonly string Help = "~/Features/Info/Help.cshtml";
            public readonly string Privacy = "~/Features/Info/Privacy.cshtml";
            public readonly string ResidencePermitForWork = "~/Features/Info/ResidencePermitForWork.cshtml";
            public readonly string ResidencePermitSpecialist = "~/Features/Info/ResidencePermitSpecialist.cshtml";
            public readonly string ResidencePermitStudy = "~/Features/Info/ResidencePermitStudy.cshtml";
            public readonly string ResidencePermitTypeSelection = "~/Features/Info/ResidencePermitTypeSelection.cshtml";
            public readonly string Terms = "~/Features/Info/Terms.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InfoController : Uma.Eservices.Web.Features.Info.InfoController
    {
        public T4MVC_InfoController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void HelpOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Help()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Help);
            HelpOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TermsOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Terms()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Terms);
            TermsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PrivacyOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Privacy()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Privacy);
            PrivacyOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ResidencePermitOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult ResidencePermit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.ResidencePermit);
            ResidencePermitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WorkPermitOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult WorkPermit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.WorkPermit);
            WorkPermitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void StudyPermitOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult StudyPermit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.StudyPermit);
            StudyPermitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WorkPermitSpecialistOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult WorkPermitSpecialist()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.WorkPermitSpecialist);
            WorkPermitSpecialistOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Localization
{
    public partial class LocalizationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalizationController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LocalizationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TextTranslationByLanguage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TextTranslationByLanguage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TextTranslation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TextTranslation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Resources()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Resources);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FAQTranslationsByLanguage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQTranslationsByLanguage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FAQTranslations()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQTranslations);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFAQ()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFAQ);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFaqTranslation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFaqTranslation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LocalizationController Actions { get { return MVC.Localization; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "localization";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "localization";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string TextTranslationByLanguage = ("TextTranslationByLanguage").ToLowerInvariant();
            public readonly string TextTranslation = ("TextTranslation").ToLowerInvariant();
            public readonly string Resources = ("Resources").ToLowerInvariant();
            public readonly string FAQTranslationsByLanguage = ("FAQTranslationsByLanguage").ToLowerInvariant();
            public readonly string FAQTranslations = ("FAQTranslations").ToLowerInvariant();
            public readonly string CreateNewFaq = ("CreateNewFaq").ToLowerInvariant();
            public readonly string UpdateFAQ = ("UpdateFAQ").ToLowerInvariant();
            public readonly string DeleteFaqTranslation = ("DeleteFaqTranslation").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string FAQTranslation = "FAQTranslation";
                public readonly string FieldLabelTranslation = "FieldLabelTranslation";
                public readonly string OriginalTextTranslation = "OriginalTextTranslation";
            }
            public readonly string FAQTranslation = "~/Features/Localization/FAQTranslation.cshtml";
            public readonly string FieldLabelTranslation = "~/Features/Localization/FieldLabelTranslation.cshtml";
            public readonly string OriginalTextTranslation = "~/Features/Localization/OriginalTextTranslation.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_LocalizationController : Uma.Eservices.Web.Features.Localization.LocalizationController
    {
        public T4MVC_LocalizationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void TextTranslationByLanguageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string text, string feature, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang, bool saveCallerUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult TextTranslationByLanguage(string text, string feature, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang, bool saveCallerUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TextTranslationByLanguage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feature", feature);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedLang", selectedLang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "saveCallerUrl", saveCallerUrl);
            TextTranslationByLanguageOverride(callInfo, text, feature, selectedLang, saveCallerUrl);
            return callInfo;
        }

        [NonAction]
        partial void TextTranslationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Localization.TranslatePageModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult TextTranslation(Uma.Eservices.Models.Localization.TranslatePageModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TextTranslation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            TextTranslationOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ResourcesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string modelName, string propertyName, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang, bool saveCallerUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Resources(string modelName, string propertyName, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang, bool saveCallerUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Resources);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "modelName", modelName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "propertyName", propertyName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedLang", selectedLang);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "saveCallerUrl", saveCallerUrl);
            ResourcesOverride(callInfo, modelName, propertyName, selectedLang, saveCallerUrl);
            return callInfo;
        }

        [NonAction]
        partial void ResourcesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Localization.WebElementModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Resources(Uma.Eservices.Models.Localization.WebElementModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Resources);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ResourcesOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void FAQTranslationsByLanguageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int faqId, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang);

        [NonAction]
        public override System.Web.Mvc.ActionResult FAQTranslationsByLanguage(int faqId, Uma.Eservices.Models.Localization.SupportedLanguage selectedLang)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQTranslationsByLanguage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "faqId", faqId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedLang", selectedLang);
            FAQTranslationsByLanguageOverride(callInfo, faqId, selectedLang);
            return callInfo;
        }

        [NonAction]
        partial void FAQTranslationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int faqId, bool saveCallerUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult FAQTranslations(int faqId, bool saveCallerUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQTranslations);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "faqId", faqId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "saveCallerUrl", saveCallerUrl);
            FAQTranslationsOverride(callInfo, faqId, saveCallerUrl);
            return callInfo;
        }

        [NonAction]
        partial void CreateNewFaqOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool saveCellerUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateNewFaq(bool saveCellerUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateNewFaq);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "saveCellerUrl", saveCellerUrl);
            CreateNewFaqOverride(callInfo, saveCellerUrl);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFAQOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Localization.TranslateFAQPageModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateFAQ(Uma.Eservices.Models.Localization.TranslateFAQPageModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFAQ);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateFAQOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFaqTranslationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int questionId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFaqTranslation(int questionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFaqTranslation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "questionId", questionId);
            DeleteFaqTranslationOverride(callInfo, questionId);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.OLE
{
    public partial class OLEController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OLEController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep1()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep1Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep1AjaxSave()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1AjaxSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep2()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep2Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep2AjaxSave()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2AjaxSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep3()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep3Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep3AjaxSave()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3AjaxSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep4()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep4Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep4AjaxSave()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4AjaxSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep5Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep5Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep6()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep6);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.EmptyResult OPIStep6Save()
        {
            return new T4MVC_System_Web_Mvc_EmptyResult(Area, Name, ActionNames.OPIStep6Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep7()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep7);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OPIStep7Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep7Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DownloadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OLEController Actions { get { return MVC.OLE; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ole";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ole";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string OPI = ("OPI").ToLowerInvariant();
            public readonly string OPIStep1 = ("OPIStep1").ToLowerInvariant();
            public readonly string OPIStep1Save = ("OPIStep1Save").ToLowerInvariant();
            public readonly string OPIStep1AjaxSave = ("OPIStep1AjaxSave").ToLowerInvariant();
            public readonly string OPIStep2 = ("OPIStep2").ToLowerInvariant();
            public readonly string OPIStep2Save = ("OPIStep2Save").ToLowerInvariant();
            public readonly string OPIStep2AjaxSave = ("OPIStep2AjaxSave").ToLowerInvariant();
            public readonly string OPIStep3 = ("OPIStep3").ToLowerInvariant();
            public readonly string OPIStep3Save = ("OPIStep3Save").ToLowerInvariant();
            public readonly string OPIStep3AjaxSave = ("OPIStep3AjaxSave").ToLowerInvariant();
            public readonly string OPIStep4 = ("OPIStep4").ToLowerInvariant();
            public readonly string OPIStep4Save = ("OPIStep4Save").ToLowerInvariant();
            public readonly string OPIStep4AjaxSave = ("OPIStep4AjaxSave").ToLowerInvariant();
            public readonly string OPIStep5Save = ("OPIStep5Save").ToLowerInvariant();
            public readonly string OPIStep6 = ("OPIStep6").ToLowerInvariant();
            public readonly string OPIStep6Save = ("OPIStep6Save").ToLowerInvariant();
            public readonly string OPIStep7 = ("OPIStep7").ToLowerInvariant();
            public readonly string OPIStep7Save = ("OPIStep7Save").ToLowerInvariant();
            public readonly string UploadFile = ("UploadFile").ToLowerInvariant();
            public readonly string DeleteFile = ("DeleteFile").ToLowerInvariant();
            public readonly string DownloadFile = ("DownloadFile").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
            public readonly string Index = ("Index").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
            static readonly _DynamicTemplatesClass s_DynamicTemplates = new _DynamicTemplatesClass();
            public _DynamicTemplatesClass DynamicTemplates { get { return s_DynamicTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _DynamicTemplatesClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _OLE_Children = "_OLE_Children";
                    public readonly string _OLE_OPI_Step1_Block1_CurrentCitizenship = "_OLE_OPI_Step1_Block1_CurrentCitizenship";
                    public readonly string _OLE_OPI_Step1_Block1_PersonPersonPreviousNames = "_OLE_OPI_Step1_Block1_PersonPersonPreviousNames";
                    public readonly string _OLE_OPI_Step1_Block1_PreviousCitizenship = "_OLE_OPI_Step1_Block1_PreviousCitizenship";
                }
                public readonly string _OLE_Children = "~/Features/OLE/DynamicTemplates/_OLE_Children.cshtml";
                public readonly string _OLE_OPI_Step1_Block1_CurrentCitizenship = "~/Features/OLE/DynamicTemplates/_OLE_OPI_Step1_Block1_CurrentCitizenship.cshtml";
                public readonly string _OLE_OPI_Step1_Block1_PersonPersonPreviousNames = "~/Features/OLE/DynamicTemplates/_OLE_OPI_Step1_Block1_PersonPersonPreviousNames.cshtml";
                public readonly string _OLE_OPI_Step1_Block1_PreviousCitizenship = "~/Features/OLE/DynamicTemplates/_OLE_OPI_Step1_Block1_PreviousCitizenship.cshtml";
            }
            static readonly _EditorTemplatesClass s_EditorTemplates = new _EditorTemplatesClass();
            public _EditorTemplatesClass EditorTemplates { get { return s_EditorTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _EditorTemplatesClass
            {
                public readonly string _OLE_OPI_Step1_Block1_Person = "_OLE_OPI_Step1_Block1_Person";
                public readonly string _OLE_OPI_Step1_Block2_Contacts = "_OLE_OPI_Step1_Block2_Contacts";
                public readonly string _OLE_OPI_Step1_Block3_Passport = "_OLE_OPI_Step1_Block3_Passport";
                public readonly string _OLE_OPI_Step1_Block4_Duration = "_OLE_OPI_Step1_Block4_Duration";
                public readonly string _OLE_OPI_Step1_Block5_Family = "_OLE_OPI_Step1_Block5_Family";
                public readonly string _OLE_OPI_Step2_Block1_Education = "_OLE_OPI_Step2_Block1_Education";
                public readonly string _OLE_OPI_Step2_Block2_Staying = "_OLE_OPI_Step2_Block2_Staying";
                public readonly string _OLE_OPI_Step2_Block3_PreviousEducation = "_OLE_OPI_Step2_Block3_PreviousEducation";
                public readonly string _OLE_OPI_Step3_Block1_FinancialSupport = "_OLE_OPI_Step3_Block1_FinancialSupport";
                public readonly string _OLE_OPI_Step3_Block2_HealthInsurance = "_OLE_OPI_Step3_Block2_HealthInsurance";
                public readonly string _OLE_OPI_Step3_Block3_AdditionalInfo = "_OLE_OPI_Step3_Block3_AdditionalInfo";
                public readonly string _OLE_OPI_Step3_Block4_CriminalInfo = "_OLE_OPI_Step3_Block4_CriminalInfo";
                public readonly string _OLE_OPI_Step4_Block1_Travel = "_OLE_OPI_Step4_Block1_Travel";
                public readonly string _OLE_OPI_Step4_Block10_Supplemental = "_OLE_OPI_Step4_Block10_Supplemental";
                public readonly string _OLE_OPI_Step4_Block2_Income = "_OLE_OPI_Step4_Block2_Income";
                public readonly string _OLE_OPI_Step4_Block3_Health = "_OLE_OPI_Step4_Block3_Health";
                public readonly string _OLE_OPI_Step4_Block4_Certificate = "_OLE_OPI_Step4_Block4_Certificate";
                public readonly string _OLE_OPI_Step4_Block5_Registration = "_OLE_OPI_Step4_Block5_Registration";
                public readonly string _OLE_OPI_Step4_Block6_Degree = "_OLE_OPI_Step4_Block6_Degree";
                public readonly string _OLE_OPI_Step4_Block7_Employment_Certificates = "_OLE_OPI_Step4_Block7_Employment_Certificates";
                public readonly string _OLE_OPI_Step4_Block8_Refusal = "_OLE_OPI_Step4_Block8_Refusal";
                public readonly string _OLE_OPI_Step4_Block9_Guardian = "_OLE_OPI_Step4_Block9_Guardian";
            }
            static readonly _PdfPartialViewsClass s_PdfPartialViews = new _PdfPartialViewsClass();
            public _PdfPartialViewsClass PdfPartialViews { get { return s_PdfPartialViews; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PdfPartialViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _PDF_OLE_OPI_Step1_Block1_Person = "_PDF_OLE_OPI_Step1_Block1_Person";
                    public readonly string _PDF_OLE_OPI_Step1_Block2_Contacts = "_PDF_OLE_OPI_Step1_Block2_Contacts";
                    public readonly string _PDF_OLE_OPI_Step1_Block3_Passport = "_PDF_OLE_OPI_Step1_Block3_Passport";
                    public readonly string _PDF_OLE_OPI_Step1_Block4_Duration = "_PDF_OLE_OPI_Step1_Block4_Duration";
                    public readonly string _PDF_OLE_OPI_Step1_Block5_Family = "_PDF_OLE_OPI_Step1_Block5_Family";
                    public readonly string _PDF_OLE_OPI_Step2_Block1_Education = "_PDF_OLE_OPI_Step2_Block1_Education";
                    public readonly string _PDF_OLE_OPI_Step2_Block2_Staying = "_PDF_OLE_OPI_Step2_Block2_Staying";
                    public readonly string _PDF_OLE_OPI_Step2_Block3_PreviousEducation = "_PDF_OLE_OPI_Step2_Block3_PreviousEducation";
                    public readonly string _PDF_OLE_OPI_Step3_Block1_FinancialSupport = "_PDF_OLE_OPI_Step3_Block1_FinancialSupport";
                    public readonly string _PDF_OLE_OPI_Step3_Block2_HealthInsurance = "_PDF_OLE_OPI_Step3_Block2_HealthInsurance";
                    public readonly string _PDF_OLE_OPI_Step3_Block3_AdditionalInfo = "_PDF_OLE_OPI_Step3_Block3_AdditionalInfo";
                    public readonly string _PDF_OLE_OPI_Step3_Block4_CriminalInfo = "_PDF_OLE_OPI_Step3_Block4_CriminalInfo";
                    public readonly string PDF_OLE_Children = "PDF_OLE_Children";
                    public readonly string PDF_OLE_CurrentCitizenship = "PDF_OLE_CurrentCitizenship";
                    public readonly string PDF_OLE_PersonPersonPreviousNames = "PDF_OLE_PersonPersonPreviousNames";
                    public readonly string PDF_OLE_PreviousCitizenship = "PDF_OLE_PreviousCitizenship";
                }
                public readonly string _PDF_OLE_OPI_Step1_Block1_Person = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step1_Block1_Person.cshtml";
                public readonly string _PDF_OLE_OPI_Step1_Block2_Contacts = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step1_Block2_Contacts.cshtml";
                public readonly string _PDF_OLE_OPI_Step1_Block3_Passport = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step1_Block3_Passport.cshtml";
                public readonly string _PDF_OLE_OPI_Step1_Block4_Duration = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step1_Block4_Duration.cshtml";
                public readonly string _PDF_OLE_OPI_Step1_Block5_Family = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step1_Block5_Family.cshtml";
                public readonly string _PDF_OLE_OPI_Step2_Block1_Education = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step2_Block1_Education.cshtml";
                public readonly string _PDF_OLE_OPI_Step2_Block2_Staying = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step2_Block2_Staying.cshtml";
                public readonly string _PDF_OLE_OPI_Step2_Block3_PreviousEducation = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step2_Block3_PreviousEducation.cshtml";
                public readonly string _PDF_OLE_OPI_Step3_Block1_FinancialSupport = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step3_Block1_FinancialSupport.cshtml";
                public readonly string _PDF_OLE_OPI_Step3_Block2_HealthInsurance = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step3_Block2_HealthInsurance.cshtml";
                public readonly string _PDF_OLE_OPI_Step3_Block3_AdditionalInfo = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step3_Block3_AdditionalInfo.cshtml";
                public readonly string _PDF_OLE_OPI_Step3_Block4_CriminalInfo = "~/Features/OLE/PdfPartialViews/_PDF_OLE_OPI_Step3_Block4_CriminalInfo.cshtml";
                public readonly string PDF_OLE_Children = "~/Features/OLE/PdfPartialViews/PDF_OLE_Children.cshtml";
                public readonly string PDF_OLE_CurrentCitizenship = "~/Features/OLE/PdfPartialViews/PDF_OLE_CurrentCitizenship.cshtml";
                public readonly string PDF_OLE_PersonPersonPreviousNames = "~/Features/OLE/PdfPartialViews/PDF_OLE_PersonPersonPreviousNames.cshtml";
                public readonly string PDF_OLE_PreviousCitizenship = "~/Features/OLE/PdfPartialViews/PDF_OLE_PreviousCitizenship.cshtml";
            }
            static readonly _PdfViewsClass s_PdfViews = new _PdfViewsClass();
            public _PdfViewsClass PdfViews { get { return s_PdfViews; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PdfViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string PDF_OLE_OPI = "PDF_OLE_OPI";
                    public readonly string PDF_OPI_Step1 = "PDF_OPI_Step1";
                    public readonly string PDF_OPI_Step2 = "PDF_OPI_Step2";
                    public readonly string PDF_OPI_Step3 = "PDF_OPI_Step3";
                }
                public readonly string PDF_OLE_OPI = "~/Features/OLE/PdfViews/PDF_OLE_OPI.cshtml";
                public readonly string PDF_OPI_Step1 = "~/Features/OLE/PdfViews/PDF_OPI_Step1.cshtml";
                public readonly string PDF_OPI_Step2 = "~/Features/OLE/PdfViews/PDF_OPI_Step2.cshtml";
                public readonly string PDF_OPI_Step3 = "~/Features/OLE/PdfViews/PDF_OPI_Step3.cshtml";
            }
            static readonly _ViewsClass s_Views = new _ViewsClass();
            public _ViewsClass Views { get { return s_Views; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _ViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string OPI_Step1 = "OPI_Step1";
                    public readonly string OPI_Step2 = "OPI_Step2";
                    public readonly string OPI_Step3 = "OPI_Step3";
                    public readonly string OPI_Step4 = "OPI_Step4";
                    public readonly string OPI_Step5 = "OPI_Step5";
                    public readonly string OPI_Step6 = "OPI_Step6";
                    public readonly string OPI_Step7 = "OPI_Step7";
                }
                public readonly string OPI_Step1 = "~/Features/OLE/Views/OPI_Step1.cshtml";
                public readonly string OPI_Step2 = "~/Features/OLE/Views/OPI_Step2.cshtml";
                public readonly string OPI_Step3 = "~/Features/OLE/Views/OPI_Step3.cshtml";
                public readonly string OPI_Step4 = "~/Features/OLE/Views/OPI_Step4.cshtml";
                public readonly string OPI_Step5 = "~/Features/OLE/Views/OPI_Step5.cshtml";
                public readonly string OPI_Step6 = "~/Features/OLE/Views/OPI_Step6.cshtml";
                public readonly string OPI_Step7 = "~/Features/OLE/Views/OPI_Step7.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_OLEController : Uma.Eservices.Web.Features.OLE.OLEController
    {
        public T4MVC_OLEController() : base(Dummy.Instance) { }

        [NonAction]
        partial void OPIOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPI()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPI);
            OPIOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep1Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep1(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep1Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep1SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEPersonalInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep1Save(Uma.Eservices.Models.OLE.OLEPersonalInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep1SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep1AjaxSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEPersonalInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep1AjaxSave(Uma.Eservices.Models.OLE.OLEPersonalInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep1AjaxSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep1AjaxSaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep2Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep2(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep2Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep2SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEOPIEducationInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep2Save(Uma.Eservices.Models.OLE.OLEOPIEducationInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep2SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep2AjaxSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEOPIEducationInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep2AjaxSave(Uma.Eservices.Models.OLE.OLEOPIEducationInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep2AjaxSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep2AjaxSaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep3Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep3(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep3Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep3SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEOPIFinancialInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep3Save(Uma.Eservices.Models.OLE.OLEOPIFinancialInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep3SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep3AjaxSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEOPIFinancialInformationPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep3AjaxSave(Uma.Eservices.Models.OLE.OLEOPIFinancialInformationPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep3AjaxSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep3AjaxSaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep4Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep4(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep4Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep4SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEAttachmentPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep4Save(Uma.Eservices.Models.OLE.OLEAttachmentPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep4SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep4AjaxSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEAttachmentPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep4AjaxSave(Uma.Eservices.Models.OLE.OLEAttachmentPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep4AjaxSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep4AjaxSaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep5SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEAttachmentPage model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep5Save(Uma.Eservices.Models.OLE.OLEAttachmentPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep5Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep5SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep6Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep6(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep6);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep6Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep6SaveOverride(T4MVC_System_Web_Mvc_EmptyResult callInfo, Uma.Eservices.Models.OLE.OLEPaymentPage model);

        [NonAction]
        public override System.Web.Mvc.EmptyResult OPIStep6Save(Uma.Eservices.Models.OLE.OLEPaymentPage model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_EmptyResult(Area, Name, ActionNames.OPIStep6Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep6SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep7Override(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep7(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep7);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OPIStep7Override(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void OPIStep7SaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.OLEApplicationSubmit model);

        [NonAction]
        public override System.Web.Mvc.ActionResult OPIStep7Save(Uma.Eservices.Models.OLE.OLEApplicationSubmit model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OPIStep7Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            OPIStep7SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void UploadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.OLE.Enums.AttachmentTypeEnum attachmentType, int applicationId, Uma.Eservices.Models.FormCommons.AttachmentBlock model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadFile(Uma.Eservices.Models.OLE.Enums.AttachmentTypeEnum attachmentType, int applicationId, Uma.Eservices.Models.FormCommons.AttachmentBlock model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachmentType", attachmentType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "applicationId", applicationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UploadFileOverride(callInfo, attachmentType, applicationId, model);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(string fileUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            DeleteFileOverride(callInfo, fileUrl);
            return callInfo;
        }

        [NonAction]
        partial void DownloadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl, string mimetype);

        [NonAction]
        public override System.Web.Mvc.ActionResult DownloadFile(string fileUrl, string mimetype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mimetype", mimetype);
            DownloadFileOverride(callInfo, fileUrl, mimetype);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

    }
}

namespace Uma.Eservices.Web.Features.Sandbox
{
    public partial class SandboxController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SandboxController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExceptionTestApp()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestApp);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExceptionTestNet()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestNet);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExceptionTestParameter()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestParameter);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PdfCreationTests()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PdfCreationTests);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DownloadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TestForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TestForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TestFormSave()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TestFormSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult JsonPublic()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FilePathResult FilePublic()
        {
            return new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SandboxController Actions { get { return MVC.Sandbox; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "sandbox";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "sandbox";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string ExceptionTests = ("ExceptionTests").ToLowerInvariant();
            public readonly string Grid = ("Grid").ToLowerInvariant();
            public readonly string ExceptionTestApp = ("ExceptionTestApp").ToLowerInvariant();
            public readonly string ExceptionTestNet = ("ExceptionTestNet").ToLowerInvariant();
            public readonly string ExceptionTestSec = ("ExceptionTestSec").ToLowerInvariant();
            public readonly string ExceptionTestView = ("ExceptionTestView").ToLowerInvariant();
            public readonly string ExceptionTestParameter = ("ExceptionTestParameter").ToLowerInvariant();
            public readonly string LocalizationTests = ("LocalizationTests").ToLowerInvariant();
            public readonly string PdfCreationTests = ("PdfCreationTests").ToLowerInvariant();
            public readonly string FileUploadTests = ("FileUploadTests").ToLowerInvariant();
            public readonly string FileUploadOneFileTests = ("FileUploadOneFileTests").ToLowerInvariant();
            public readonly string UploadFile = ("UploadFile").ToLowerInvariant();
            public readonly string DeleteFile = ("DeleteFile").ToLowerInvariant();
            public readonly string DownloadFile = ("DownloadFile").ToLowerInvariant();
            public readonly string TestForm = ("TestForm").ToLowerInvariant();
            public readonly string CollapseTest = ("CollapseTest").ToLowerInvariant();
            public readonly string TestFormSave = ("TestFormSave").ToLowerInvariant();
            public readonly string RedirectBack = ("RedirectBack").ToLowerInvariant();
            public readonly string JsonPublic = ("JsonPublic").ToLowerInvariant();
            public readonly string FilePublic = ("FilePublic").ToLowerInvariant();
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Collapse = "Collapse";
                public readonly string Exceptions = "Exceptions";
                public readonly string FileUpload = "FileUpload";
                public readonly string FileUploadOneFile = "FileUploadOneFile";
                public readonly string Grid = "Grid";
                public readonly string Index = "Index";
                public readonly string Localization = "Localization";
                public readonly string PdfCreation = "PdfCreation";
                public readonly string TestForm = "TestForm";
            }
            public readonly string Collapse = "~/Features/Sandbox/Collapse.cshtml";
            public readonly string Exceptions = "~/Features/Sandbox/Exceptions.cshtml";
            public readonly string FileUpload = "~/Features/Sandbox/FileUpload.cshtml";
            public readonly string FileUploadOneFile = "~/Features/Sandbox/FileUploadOneFile.cshtml";
            public readonly string Grid = "~/Features/Sandbox/Grid.cshtml";
            public readonly string Index = "~/Features/Sandbox/Index.cshtml";
            public readonly string Localization = "~/Features/Sandbox/Localization.cshtml";
            public readonly string PdfCreation = "~/Features/Sandbox/PdfCreation.cshtml";
            public readonly string TestForm = "~/Features/Sandbox/TestForm.cshtml";
            static readonly _EditorTemplatesClass s_EditorTemplates = new _EditorTemplatesClass();
            public _EditorTemplatesClass EditorTemplates { get { return s_EditorTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _EditorTemplatesClass
            {
                public readonly string SpouseFormerCitiz = "SpouseFormerCitiz";
                public readonly string SpouseFormerNames = "SpouseFormerNames";
                public readonly string SpouseGeneral = "SpouseGeneral";
            }
            static readonly _PdfReportsClass s_PdfReports = new _PdfReportsClass();
            public _PdfReportsClass PdfReports { get { return s_PdfReports; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PdfReportsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string Kan7PdfReport = "Kan7PdfReport";
                    public readonly string SpousePdfReport = "SpousePdfReport";
                }
                public readonly string Kan7PdfReport = "~/Features/Sandbox/PdfReports/Kan7PdfReport.cshtml";
                public readonly string SpousePdfReport = "~/Features/Sandbox/PdfReports/SpousePdfReport.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SandboxController : Uma.Eservices.Web.Features.Sandbox.SandboxController
    {
        public T4MVC_SandboxController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTests()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTests);
            ExceptionTestsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GridOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Grid()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Grid);
            GridOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestAppOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.TestFormModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTestApp(Uma.Eservices.Models.Sandbox.TestFormModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestApp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ExceptionTestAppOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestNetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int number, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTestNet(int number, string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestNet);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "number", number);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            ExceptionTestNetOverride(callInfo, number, name);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestSecOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTestSec()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestSec);
            ExceptionTestSecOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestViewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTestView()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestView);
            ExceptionTestViewOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ExceptionTestParameterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int giveCount);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExceptionTestParameter(int giveCount)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExceptionTestParameter);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "giveCount", giveCount);
            ExceptionTestParameterOverride(callInfo, giveCount);
            return callInfo;
        }

        [NonAction]
        partial void LocalizationTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LocalizationTests()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LocalizationTests);
            LocalizationTestsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PdfCreationTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PdfCreationTests(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PdfCreationTests);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PdfCreationTestsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void FileUploadTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileUploadTests()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileUploadTests);
            FileUploadTestsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FileUploadOneFileTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileUploadOneFileTests()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileUploadOneFileTests);
            FileUploadOneFileTestsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UploadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? entityId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadFile(int? entityId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entityId", entityId);
            UploadFileOverride(callInfo, entityId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(string fileUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            DeleteFileOverride(callInfo, fileUrl);
            return callInfo;
        }

        [NonAction]
        partial void DownloadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileUrl, string mimetype);

        [NonAction]
        public override System.Web.Mvc.ActionResult DownloadFile(string fileUrl, string mimetype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DownloadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileUrl", fileUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mimetype", mimetype);
            DownloadFileOverride(callInfo, fileUrl, mimetype);
            return callInfo;
        }

        [NonAction]
        partial void TestFormOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TestForm(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TestForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TestFormOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CollapseTestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CollapseTest()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CollapseTest);
            CollapseTestOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TestFormSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.TestFormModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult TestFormSave(Uma.Eservices.Models.Sandbox.TestFormModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TestFormSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            TestFormSaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CollapseTestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.CollapseModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CollapseTest(Uma.Eservices.Models.Sandbox.CollapseModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CollapseTest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CollapseTestOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void PdfCreationTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.Kan7Model model);

        [NonAction]
        public override System.Web.Mvc.ActionResult PdfCreationTests(Uma.Eservices.Models.Sandbox.Kan7Model model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PdfCreationTests);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PdfCreationTestsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void FileUploadOneFileTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.FileUploadModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileUploadOneFileTests(Uma.Eservices.Models.Sandbox.FileUploadModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileUploadOneFileTests);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            FileUploadOneFileTestsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void FileUploadTestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Uma.Eservices.Models.Sandbox.FileUploadModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileUploadTests(Uma.Eservices.Models.Sandbox.FileUploadModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileUploadTests);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            FileUploadTestsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void RedirectBackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectBack(string controllerName, string actionName, string returnIdValue, string bookmarkTag, string absoluteReturnLink)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectBack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "controllerName", controllerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnIdValue", returnIdValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "bookmarkTag", bookmarkTag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "absoluteReturnLink", absoluteReturnLink);
            RedirectBackOverride(callInfo, controllerName, actionName, returnIdValue, bookmarkTag, absoluteReturnLink);
            return callInfo;
        }

        [NonAction]
        partial void JsonPublicOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, object data);

        [NonAction]
        public override System.Web.Mvc.JsonResult JsonPublic(object data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.JsonPublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            JsonPublicOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void FilePublicOverride(T4MVC_System_Web_Mvc_FilePathResult callInfo, string fileName, string contentType);

        [NonAction]
        public override System.Web.Mvc.FilePathResult FilePublic(string fileName, string contentType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FilePathResult(Area, Name, ActionNames.FilePublic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "contentType", contentType);
            FilePublicOverride(callInfo, fileName, contentType);
            return callInfo;
        }

    }
}

namespace T4MVC
{
    public class CommonController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ApplicationTypes = "_ApplicationTypes";
                public readonly string _CreateNewAppLoginPanels = "_CreateNewAppLoginPanels";
                public readonly string _FillApplication = "_FillApplication";
                public readonly string _MigriBannerTextPic = "_MigriBannerTextPic";
                public readonly string _PayAndSubmit = "_PayAndSubmit";
                public readonly string _PrepareDocuments = "_PrepareDocuments";
                public readonly string _RegisterLogInPanels = "_RegisterLogInPanels";
                public readonly string _ReviewProgress = "_ReviewProgress";
                public readonly string _VisitiEmbassyOfPoliceStation = "_VisitiEmbassyOfPoliceStation";
            }
            public readonly string _ApplicationTypes = "~/Features/Common/_ApplicationTypes.cshtml";
            public readonly string _CreateNewAppLoginPanels = "~/Features/Common/_CreateNewAppLoginPanels.cshtml";
            public readonly string _FillApplication = "~/Features/Common/_FillApplication.cshtml";
            public readonly string _MigriBannerTextPic = "~/Features/Common/_MigriBannerTextPic.cshtml";
            public readonly string _PayAndSubmit = "~/Features/Common/_PayAndSubmit.cshtml";
            public readonly string _PrepareDocuments = "~/Features/Common/_PrepareDocuments.cshtml";
            public readonly string _RegisterLogInPanels = "~/Features/Common/_RegisterLogInPanels.cshtml";
            public readonly string _ReviewProgress = "~/Features/Common/_ReviewProgress.cshtml";
            public readonly string _VisitiEmbassyOfPoliceStation = "~/Features/Common/_VisitiEmbassyOfPoliceStation.cshtml";
        }
    }

}

namespace T4MVC
{
    public class KANController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
            static readonly _ViewsClass s_Views = new _ViewsClass();
            public _ViewsClass Views { get { return s_Views; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _ViewsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                }
            }
        }
    }

}

namespace T4MVC
{
    public class MastersController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string MasterPage = "MasterPage";
                public readonly string PdfLayout = "PdfLayout";
            }
            public readonly string MasterPage = "~/Features/Masters/MasterPage.cshtml";
            public readonly string PdfLayout = "~/Features/Masters/PdfLayout.cshtml";
        }
    }

}

namespace T4MVC
{
    public class SharedController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DashboardTabs = "_DashboardTabs";
                public readonly string _DefaultMathCaptchaScript = "_DefaultMathCaptchaScript";
                public readonly string _favicons = "_favicons";
                public readonly string _footer = "_footer";
                public readonly string _FormProgress = "_FormProgress";
                public readonly string _helpQuestionAnswer = "_helpQuestionAnswer";
                public readonly string _Login = "_Login";
                public readonly string _MathCaptcha = "_MathCaptcha";
                public readonly string _MultiFileUpload = "_MultiFileUpload";
                public readonly string _MultiFileUploadWithDescription = "_MultiFileUploadWithDescription";
                public readonly string _SingleiFileUpload = "_SingleiFileUpload";
                public readonly string _TopNavigation = "_TopNavigation";
                public readonly string _TwoColumnTest = "_TwoColumnTest";
            }
            public readonly string _DashboardTabs = "~/Features/Shared/_DashboardTabs.cshtml";
            public readonly string _DefaultMathCaptchaScript = "~/Features/Shared/_DefaultMathCaptchaScript.cshtml";
            public readonly string _favicons = "~/Features/Shared/_favicons.cshtml";
            public readonly string _footer = "~/Features/Shared/_footer.cshtml";
            public readonly string _FormProgress = "~/Features/Shared/_FormProgress.cshtml";
            public readonly string _helpQuestionAnswer = "~/Features/Shared/_helpQuestionAnswer.cshtml";
            public readonly string _Login = "~/Features/Shared/_Login.cshtml";
            public readonly string _MathCaptcha = "~/Features/Shared/_MathCaptcha.cshtml";
            public readonly string _MultiFileUpload = "~/Features/Shared/_MultiFileUpload.cshtml";
            public readonly string _MultiFileUploadWithDescription = "~/Features/Shared/_MultiFileUploadWithDescription.cshtml";
            public readonly string _SingleiFileUpload = "~/Features/Shared/_SingleiFileUpload.cshtml";
            public readonly string _TopNavigation = "~/Features/Shared/_TopNavigation.cshtml";
            public readonly string _TwoColumnTest = "~/Features/Shared/_TwoColumnTest.cshtml";
        }
    }

}




#endregion T4MVC
#pragma warning restore 1591


