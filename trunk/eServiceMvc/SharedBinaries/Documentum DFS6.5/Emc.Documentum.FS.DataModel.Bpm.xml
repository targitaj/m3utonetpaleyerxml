<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emc.Documentum.FS.DataModel.Bpm</name>
    </assembly>
    <members>
        <member name="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo">
            <summary>
            Provides functionality to model alias performer assignment in
            process template.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.AddUsedInActivityName(System.String)">
            <summary>
            Adds an activity in which the alias is used to the activities names list.
            </summary>
            <param name="actName">the string representing the activity name</param>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.UsedInActivityNames">
            <summary>
            List of names of activities in the current template where the alias
            is used.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.AliasCategory">
            <summary>
            Alias category.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.AliasDescription">
            <summary>
            Alias description.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.AliasName">
            <summary>
            Alias name.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo.AliasValue">
            <summary>
            Alias value if there is any.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo">
            <summary>
            Provides functionality to model the process template for Start Workflow.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.GetAliasAssignmentByAliasName(System.String)">
            <summary>
            Returns a <CODE>ProcessAliasAssignmentInfo</CODE> object corresponding
            to the alias name that gets passed in.
            </summary>
            <param name="aliasName">string representing the alias name of the alias assignment that you want to return.</param>
            <returns>A <see cref="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo"/> object that corresponds to the alias name.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.IsAliasAssignmentRequired">
            <summary>
            Tests if there are any alias assignments that need to be resolved at process instantiation time.
            </summary>
            <returns>
            <CODE>true</CODE> if there are alias assignments that need to be resolved
            and <CODE>false</CODE> otherwise
            </returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.GetPerformerAssignmentByActivityName(System.String)">
            <summary>
            Returns a <CODE>ProcessPerformerAssignmentInfo</CODE> object corresponding
            to the target activity name that gets passed in.
            </summary>
            <param name="actName">Target activity name of the performer assignment that you want to return.</param>
            <returns>A <see cref="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo"/> object that corresponds to the target activity name.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.IsPerformerAssignmentRequired">
            <summary>
            Tests if the performer of these tasks is to assign performers of other tasks in the process.
            </summary>
            <returns><CODE>true</CODE> if this performer has to assign performers of other tasks and <CODE>false</CODE> otherwise</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.GetWorkflowAttachmentCount">
            <summary>
            Count of the workflow attachments. 
            </summary>
            <returns>The number of workflow attachments added so far.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.GetWorkflowAttachmentType(System.Int32)">
            <summary>
            Returns the object type name of the workflow attachment
            at the specified index.
            </summary>
            <param name="index">the index position of the desired workflow attachment type</param>
            <returns>The object type name of the workflow attachment.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.GetWorkflowAttachmentId(System.Int32)">
            <summary>
            Returns the object id of the workflow attachment at the specified index.
            </summary>
            <param name="index">the index position of the desired id</param>
            <returns>The object id of the workflow attachment.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.AddWorkflowAttachment(System.String,Emc.Documentum.FS.DataModel.Core.ObjectId)">
            <summary>
            Add the object id of the type as a new workflow attachment.
            </summary>
            <param name="componentType">type of the component.</param>
            <param name="componentId">object id of the component.</param>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.RemoveWorkflowAttachment(Emc.Documentum.FS.DataModel.Core.ObjectId)">
            <summary>
            Removes a workflow attachment from the process.
            </summary>
            <param name="componentId">the object ID of the component that you are removing.</param>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.ProcessId">
            <summary>
            Process template id on which the process instance is based.
            Process definitions are stored in the repository as dm_process objects.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.StartActivityIdentities">
            <summary>
            List of object IDs of the start activities in the process definition.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.StartActivityNames">
            <summary>
            Names of the start activities in the process definition.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.Packages">
            <summary>
            Packages of the process with the specified name.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.PerformerAssignments">
            <summary>
            A <CODE>ProcessPerformerAssignmentInfo</CODE> object corresponding
            to the target activity name that gets passed in.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.AliasAssignments">
            <summary>
            list of <see cref="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessAliasAssignmentInfo"/> objects to be used
            to assign alias values.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.WorkflowAttachmentIdentities">
            <summary>
            List of types and ids of the components for the workflow attachments.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.WorkflowAttachmentTypeNames">
            <summary>
            List of attachment names
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.ProcessInstanceName">
            <summary>
            Specifies the object name for the process instance.<P/>
            Calling this function is optional. If workflow name is
            not provided, a default name will be provided. This name
            is the process template name appending the date
            when the process instance is created.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.Supervisor">
            <summary>
            The supervisor for the process instance.<P/>
            Calling this function is optional. If supervisor is
            not provided, supervisor will be set to the creator
            by default.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessInfo.Repository">
            <summary>
            Name of the repository this config object was created off of.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessNoteInfo">
            <summary>
            Implementation of note config.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessNoteInfo.#ctor">
            <summary>
            Constructs a new ProcessNoteInfo object. 
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessNoteInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a new ProcessNoteInfo object and sets the note text and persistent flag.
            </summary>
            <param name="text">a string representing the note text</param>
            <param name="persistent">
            set to true <CODE>true</CODE> to have the note visible to all subsequent performers. Set to <CODE>false</CODE>
            to have it visible only to the performer of the following activity.
            </param>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessNoteInfo.NoteText">
            <summary>
            Notes text.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessNoteInfo.IsPersistent">
            <summary>
            The note visibility.<para/>
            Set to <CODE>true</CODE> to have the note visible
            to all subsequent performers. Set to <CODE>false</CODE>
            to have it visible only to the performer of the following activity.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo">
            <summary>
            Provides functionality to model package assignment in
            process template.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.#ctor">
            <summary>
            Constructs a new ProcessPackageInfo.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.AddNote(System.String,System.Boolean)">
            <summary>
            Creates and appends a new note to the package. The index at which the new note in the package is returned.
            </summary>
            <param name="noteText">Note message that you are adding.</param>
            <param name="persistent">
            <CODE>true</CODE> if the note should be seen by all the subsequent workflow tasks.<br/>
            <CODE>false</CODE> if the note should be seen by the very next tasks only.
            </param>
            <returns>Index the note is added to.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.RemoveNote(System.Int32)">
            <summary>
            Remove the note at specified index.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.IsNoteNew(System.Int32)">
            <summary>
            Tests if note at given index is newly added by current performer.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetNoteCount">
            <summary>
            Gets the number of notes added to the task.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetNotePersistence(System.Int32)">
            <summary>
            Returns note visibility.
            </summary>
            <param name="index">Index to the note that you are interested in.</param>
            <returns><CODE>true</CODE> to have then note visible to all subsequent performers; <CODE>false</CODE>
            to have it visible only to the performer of the following activity</returns>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetNoteText(System.Int32)">
            <summary>
            Returns the note text at index.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetDocumentCount">
            <summary>
            Returns the number of documents in the package.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetDocumentId(System.Int32)">
            <summary>
            Returns the object id of the document at index.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.AddDocuments(System.Collections.Generic.List{Emc.Documentum.FS.DataModel.Core.ObjectId})">
            <summary>
            Adds the documents in the package.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.RemoveDocuments">
            <summary>
            Removes all documents in the package.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.IsFormTemplateDefined">
            <summary>
            Returns if a form template is defined to use for this attachment.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetFormTemplateId">
            <summary>
            Returns the form template id defined to use for this attachment.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.GetFormTemplateName">
            <summary>
            Returns the form template name defined to use for this attachment.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.SetFormTemplateInfo(Emc.Documentum.FS.DataModel.Core.ObjectId,System.String,System.Boolean)">
            <summary>
            Sets the package form information. Client is not expected to set these values.
            </summary>
            <param name="templateId">forms template object id</param>
            <param name="templateName">forms template name</param>
            <param name="formForProperties">if the form is used to display the properties</param>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.RequiredLabels">
            <summary>
            Version labels the attached documents are required to be of.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.Documents">
            <summary>
            Documents in the package.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.Notes">
            <summary>
            Notes in the package
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.FormTemplateId">
            <summary>
            Form template id defined to use for this attachment.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.PackageName">
            <summary>
            Name of the package.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.RequiredType">
            <summary>
            Object type of the expecting document(s) of the package.
            The document inserted to the package can be of this type or any subtypes.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.FormTemplateName">
            <summary>
            The form template name defined to use for this attachment.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.IsFormForProperties">
            <summary>
            Specifies if to use the form for properties.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.IsOptional">
            <summary>
            Specifies if the package is optional.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPackageInfo.IsVisible">
            <summary>
            Specifies if the package is visible.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo">
            <summary>
            Provides functionality to model dynamic performer assignment in
            process template.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.PERFORMER_CATEGORY_USER">
            <summary>
            The performer should be user.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.PERFORMER_CATEGORY_GROUP">
            <summary>
            The performer should be group.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.PERFORMER_CATEGORY_USER_OR_GROUP">
            <summary>
            The performer can be user or group.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.PERFORMER_CATEGORY_WORKQUEUE">
            <summary>
            The performer should be a work queue.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.Performers">
            <summary>
            Performers for the activity to be the users/groups in the <CODE>nameList</CODE>.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.SelectFromGroups">
            <summary>
            Performer name as defined in the activity of the task
            that needs to assign performers for.<p/>
            If the original value is an alias, the alias will be resolved and the
            resolved value will be returned. <p/>
            Use this method to find out the choose from group if the performer type
            of the activity is "some users of a group".
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.IsMultiplePerformersAllowed">
            <summary>
            Tests if the type of performer specified for activity to choose performers for
            allows multiple values to be used.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.Category">
            <summary>
            Specifies what kind of performer value should be chosen for
            the target activity. Return value is one of the following:<br/>
            <CODE>
            PERFORMER_CATEGORY_USER<br/>
            PERFORMER_CATEGORY_GROUP<br/>
            PERFORMER_CATEGORY_USER_OR_GROUP<br/>
            PERFORMER_CATEGORY_WORKQUEUE<br/>
            </CODE>
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.PerformerType">
            <summary>
            Performer type of the target activity.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.TargetActivityIndex">
            <summary>
            Index of the target activity that needs to
            assign performers for, in the containing repeating attribute of
            the process object.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.DataModel.Core.Bpm.ProcessPerformerAssignmentInfo.TargetActivityName">
            <summary>
            Name of the target activity to choose performers for.
            </summary>
        </member>
    </members>
</doc>
