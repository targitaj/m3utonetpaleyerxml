<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emc.Documentum.FS.Runtime</name>
    </assembly>
    <members>
        <member name="T:Emc.Documentum.FS.Runtime.Context.Impl.IInvocationHandler">
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ClusterSession.setStickySessionId(System.String)">
            Once set, can not be changed to another value
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ClusterSession.setWeakSessionId(System.String)">
            Will be carried on until it is changed or a sticky session is provided. Weak session are
            used by services that that don't require next invocations to go to the same node in the
            cluster
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ContextThreadLocalInvocationHandler.Invoke(System.Object,System.Reflection.MethodInfo,System.Object[])">
            We need a way to propagate the service context adapter into the pipe. Thread local is the
            only way so far
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.Impl.DynamicProxy">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.Impl.MethodStore">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">
            <summary>
            ServiceContext is a stateful object maintaining identity information for service authentication,
            profiles for setting options and filters, a locale, and properties. Service context can
            be shared among multiple services.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetLocale">
            <summary>
            Gets language locale
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetLocale(System.String)">
            <summary>
            Sets language locale to service context
            </summary>
            <param name="locale"></param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetIdentityCount">
            <summary>
            Number of identities stored at service context
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetIdentity(System.Int32)">
            <summary>
            Gets identity with specified index
            </summary>
            <param name="i">Identity index</param>
            <returns>Identity - superclass of BasicIdentity and RepositoryIdentity</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.AddIdentity(Emc.Documentum.FS.DataModel.Core.Context.Identity)">
            <summary>
            Adds identity to service context
            </summary>
            <param name="identity">RepositoryIdentity or BasicIdentity</param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetIdentities(System.Collections.Generic.List{Emc.Documentum.FS.DataModel.Core.Context.Identity})">
            <summary>
            Sets list of Identities to service context
            </summary>
            <param name="identities">RepositoryIdentity or BasicIdentity</param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetProfileCount">
            <summary>
            Number of profiles contained at service context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetProfile(Emc.Documentum.FS.DataModel.Core.Profiles.Profile)">
            <summary>
            Sets profile to service context.
            </summary>
            <param name="profile"><see cref="T:Emc.Documentum.FS.DataModel.Core.Profiles.Profile"/></param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetProfile(System.Type)">
            <summary>
            Gets profile by type
            </summary>
            <param name="type">Type of profile which needs to be retrieved</param>
            <returns>Profile</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetProfiles(System.Collections.Generic.List{Emc.Documentum.FS.DataModel.Core.Profiles.Profile})">
            <summary>
            Sets list of profiles to service context.
            </summary>
            <param name="profiles">Given profiles</param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.Clone">
            <summary>
            Clones Context
            Not supported in current version.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetIdentities">
            <summary>
            Gets collection of identities, which are mappings of repository names onto
            sets of user credentials used in service authentication. A service context is expected to contain only
            one identity per repository name. Identities will be set in a service context using one of two concrete
            subclasses: BasicIdentity and RepositoryIdentity.
            </summary>
            <returns>IEnumerator</returns>
            <seealso cref="T:Emc.Documentum.FS.DataModel.Core.Context.BasicIdentity">BasicIdentity</seealso>
            <seealso cref="T:Emc.Documentum.FS.DataModel.Core.Context.RepositoryIdentity">RepositoryIdentity</seealso>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetProfiles">
            <summary>
            Contains profiles that specify behaviors for the operation. The profiles
            can potentially overlap with profiles stored in the OperationOptions. In the case that they do overlap,
            the profiles in OperationOptions always take precedence over profiles stored in the service context.
            The profiles stored in the service context take effect when no matching profile is stored in the
            OperationOptions for a specific operation. The override of profiles in the service context takes place on
            a profile-by-profile basis: there is no merge of specific settings stored within the profiles.
            </summary>
            <returns>Profiles</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetRuntimeProperties">
            <summary>
            RuntimeProperties collection, in which properties can be set for all services
            sharing the service context. These properties settings can be used to store configuration settings
            that are scoped to the service context, and which therefore are not suitable as operation parameters
            or inclusion in the OperationOptions PropertySet.Properties included in RuntimeProperties would
            generally be standalone properties. If your service configuration requires a set of interrelated
            properties, it may be more appropriate to extend the Profile class and manage the settings within the
            profile. DFS platform services generally use profiles in preference to RuntimeProperties.
            </summary>
            <returns>IEnumerator containing RuntimeProperties</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetRuntimeProperty``1(System.String,``0)">
            <summary>
            Sets runtime property to service context
            </summary>
            <typeparam name="T">Type of the property</typeparam>
            <param name="name">Name of the property</param>
            <param name="value">Value of the property</param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.GetRuntimeProperty(System.String)">
            <summary>
            Gets runtime property with specified name.
            </summary>
            <param name="name">Name of the property</param>
            <returns>Property</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IServiceContext.SetRuntimeProperties(Emc.Documentum.FS.DataModel.Core.Properties.PropertySet)">
            <summary>
            Sets collection of properties to ServiceContext
            </summary>
            <param name="properties">PropertySet</param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.GetToken">
            This would always point to the registered token. If the context was not registered, a
            temporary token would be returned
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.ClearDeltaContext">
            Clears delta, but preserves the token so that we can reuse
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.GetRuntimeProperties">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.SetRuntimeProperty``1(System.String,``0)">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.m_consolidatedContext">
            This is the real container of all options, used by client and server side.  It cannot be null, but can be empty
        </member>
        <member name="F:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.m_deltaContext">
            This is a deltas context that allows to send capture only changes after Adapter was created.  It can be null.
        </member>
        <member name="F:Emc.Documentum.FS.Runtime.Context.Impl.ServiceContextAdapter.m_isRemoteInvocation">
            This variable is use only during actual call within a single thread. By default it should be false.
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.ContextFactory">
            <summary>
            ContextFactory provides API for creation and registration of ServiceContext to ContextRegistryService
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ContextFactory.NewContext">
            <summary>
            Creates new service context
            </summary>
            <returns><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">Service Context</see></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ContextFactory.GetContext">
            <summary>
            Retrieves context which is stored at ThreadLocalContextStorage, or creates new service context
            For chained services only<br/>
            Currently is not supported.
            </summary>
            <returns><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">Service Context</see></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ContextFactory.Register(Emc.Documentum.FS.Runtime.Context.IServiceContext)">
            <summary>
            Registers service context at default ContextRegistryService which is set at App.config
            </summary>
            <param name="serviceContext">IServiceContext</param>
            <returns><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">Context</see></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ContextFactory.Register(Emc.Documentum.FS.Runtime.Context.IServiceContext,System.String,System.String)">
            <summary>
            Registers service context at specified ContextRegistryService.
            </summary>
            <param name="serviceContext">IServiceContext</param>
            <param name="serviceModule">module where ContextRegistryService is deployed (e.g. "core")</param>
            <param name="contextRoot">contextRoot where ContextRegistryService is deployed (e.g. "http://localhost:7001/services")</param>
            <returns><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">Service Context</see></returns>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Context.ContextFactory.Instance">
            <summary>
            Gets an instance of ContextFactory
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.IContextHolder">
            <summary>
            Retrieves IServiceContext from service.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.IContextHolder.GetServiceContext">
            <summary>
            Retrieves IServiceContext from service
            </summary>
            <returns>
            <seealso cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext">IServiceContext</seealso>
            </returns>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Context.ServiceFactory">
            <summary>
            ServiceFactory is used for instantiating service.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ServiceFactory.GetRemoteService``1(Emc.Documentum.FS.Runtime.Context.IServiceContext)">
            <summary>
            Gets service to be called using remote (SOAP) interaction.
            Implicit service addressing on the .NET client uses settings provided by the .NET runtime
            client configuration (in App.config) as implicit service module name and context root.
            </summary>
            <typeparam name="T">Type of service class, e.g. IObjectService</typeparam>
            <param name="serviceContext"><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext"/></param>
            <returns>service instance</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Context.ServiceFactory.GetRemoteService``1(Emc.Documentum.FS.Runtime.Context.IServiceContext,System.String,System.String)">
            <summary>
            Gets service to be called using remote (SOAP) interaction.
            Explicit addressing requires passing of a service module name and context root in ServiceFactory method
            </summary>
            <typeparam name="T">Type of service class, e.g. IObjectService</typeparam>
            <param name="serviceContext"><see cref="T:Emc.Documentum.FS.Runtime.Context.IServiceContext"/></param>
            <param name="serviceModule">service module name (e.g. "core")</param>
            <param name="contextRoot">service context root (e.g. "http://localhost:7001/services/")</param>
            <returns>service instance</returns>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Context.ServiceFactory.Instance">
            <returns>
            Instance of ServiceFactory
            </returns>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Impl.Configuration.AppConfig">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Impl.Configuration.ConfigObject">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr">
            <summary>
            The Documentum Foundation Services wrapper around .NET Framework's 
            <see cref="T:System.Resources.ResourceManager">ResourceManager</see> class. 
            This class cannot be inherited.
            </summary>
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.#ctor">
            <summary>
            Initializes the per-instance fields of the <see cref="T:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr">ResourceMgr</see>
            class.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetManager">
            <summary>
            Returns an instance of the <see cref="T:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr">ResourceMgr</see> class.
            </summary>
            <returns>A <see cref="T:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr">ResourceMgr</see> object.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetBoolean(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>bool</c>.</param>
            <returns>A <c>bool</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>bool</c>.</param>
            <returns>A localized <c>bool</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetByte(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>byte</c>.</param>
            <returns>A <c>byte</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>byte</c>.</param>
            <returns>A localized <c>byte</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetChar(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>char</c>.</param>
            <returns>A <c>char</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>char</c>.</param>
            <returns>A localized <c>char</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetDouble(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>double</c>.</param>
            <returns>A <c>double</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>double</c>.</param>
            <returns>A localized <c>double</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetFloat(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>float</c>.</param>
            <returns>A <c>float</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>float</c>.</param>
            <returns>A localized <c>float</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetInt(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>int</c>.</param>
            <returns>An <c>int</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>int</c>.</param>
            <returns>A localized <c>int</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetLong(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>long</c>.</param>
            <returns>A <c>long</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>long</c>.</param>
            <returns>A localized <c>long</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetObject(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>object</c>.</param>
            <returns>An <c>object</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>object</c>.</param>
            <returns>A localized <c>object</c>.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetShort(System.String)">
            <summary>
            
            </summary>
            <param name="name">The name of a localized <c>short</c>.</param>
            <returns>A <c>short</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>short</c>.</param>
            <returns>A localized short.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetString(System.String)">
            <summary>
            Returns a string resource localized using the default locale.
            </summary>
            <param name="name">The name of a localized <c>string</c>.</param>
            <returns>A <c>string</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Returns a string resource localized using the specified locale.
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>string</c>.</param>
            <returns>A localized string.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetString(System.String,System.Object[])">
            <summary>
            Returns a formatted string resource localized using the default locale.
            </summary>
            <param name="name">The name of a localized <c>string</c>.</param>
            <param name="args">An array of objects to format.</param>
            <returns>A <c>string</c> value in the default locale.</returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.ResourceMgr.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Returns a formatted string resource localized using the specified locale.
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> object.</param>
            <param name="name">The name of a localized <c>string</c>.</param>
            <param name="args">An array of objects to format.</param>
            <returns>A localized string.</returns>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase">
            <summary>
            <c>XmlSectionSettingsBase</c> provides any class that derives from it the ability 
            to reload itself with associated configuration data changes in the application 
            configuration files.
            </summary>
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.LoadSettings(System.Xml.XmlNode)">
            <summary>
            Called by the XmlSerializationSectionHandler to deserialize a 
            settings object for the first time. If that object inherits from 
            XmlSectionSettingsBase, then we make it watch for changes to the 
            config file.
            </summary>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.UpdateChanges">
            <summary>
            Method that checks for changes to the config file. If changes are 
            found, the settings are reloaded.  This should be called before 
            access to each public property.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.DeserializeSection(System.Xml.XmlNode)">
            <summary>
            Returns an object deserialized from an Xml Configuration Section.
            </summary>
            <param name="section">The configuration section containing the settings.</param>
            <returns></returns>
            <exception cref="T:System.Configuration.ConfigurationException">Invalid type specified.</exception>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.WatchForConfigChanges">
            <summary>
            Sets up a file system watcher to watch for changes to the config file.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationException">Configuration file could not be monitored for changes.</exception>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.OnConfigChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Merely marks the fact that the configuration file has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.ReloadSettings">
            <summary>
            Reloads setting values from the configuration file.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationException">Configuration section could not be found.</exception>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSectionSettingsBase.CopySettings(System.Object)">
            <summary>
            Updates the settings of this instance with the values 
            of the new settings by copying public property values.
            </summary>
            <param name="newSettings"></param>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSerializerSectionHandler">
            <summary>
            <c>XmlSerializerSectionHandler</c> provides a flexible 
            <see cref="T:System.Configuration.IConfigurationSectionHandler">configuration section handler</see> 
            that uses XML serialization to convert XML within a configuration file (i.e. app.config) 
            into an object.
            </summary>
            <remarks>
            In you app.config file, you associate a named section of XML with its handling type
            (i.e. section handler).
            </remarks>
            <example>
            Here is an XML example of a named section declaration in app.config:
            <code>
            &lt;configuration&gt;
               &lt;configSections&gt;
                  &lt;section name="MySection" type="Emc.Documentum.FS.Runtime.Configuration, Emc.Documentum.FS.Runtime.Configuration" /&gt;
               &lt;/configSections&gt;
            &lt;/configuration&gt;
            </code>
            Here is an XML example of a named section definition in app.config:
            <code>
            &lt;configuration&gt;
               &lt;MySection type="NameSpace.MyConfigSettingObject, MyAssembly"&gt;
                  &lt;Foo&gt;1234&lt;/Foo&gt;
                  &lt;Bar&gt;Blah&lt;/Bar&gt;
                  &lt;Quux&gt;true&lt;/Quux&gt;
               &lt;/MySection&gt;
            &lt;/configuration&gt;
            </code>
            Here is a C# example of accessing custom configuration data from app.config:
            <code>
            NameSpace.MyConfigSettingObject myConfigSettings = (NameSpace.MyConfigSettingObject)System.Configuration.ConfigurationSettings.GetConfig("MySection");
            </code>
            </example>
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.Impl.Configuration.XmlSerializerSectionHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Implemented by all configuration section handlers to parse the XML of the configuration 
            section. The returned object is added to the configuration collection and is accessed 
            by <see cref="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">GetConfig</see>.
            </summary>
            <param name="parent">The configuration settings in a corresponding parent configuration section.</param>
            <param name="configContext">An HttpConfigurationContext when Create is called from the ASP.NET configuration system. Otherwise, this parameter is reserved and is a null reference.</param>
            <param name="section">The <see cref="T:System.Xml.XmlNode">XmlNode</see> that contains the configuration information from the configuration file. Provides direct access to the XML contents of the configuration section.</param>
            <returns>A configuration object.</returns>
            <exception cref="T:System.Configuration.ConfigurationException">Configuration data could not be loaded.</exception>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ServiceInvocationException">
            <summary>
            Exception which is raised when service invocation fails.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ServiceException">
            <summary>
            Base class for DFS .NET exceptions.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.ServiceException.StackTrace">
            <summary>
            Exception's stacktrace.<p/>
            <li>If exception was instantiated on server side, it returns server's stacktrace.</li>
            <li>If exception was instantiated on client side, it returns generic .NET stacktrace.</li>
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceInvocationException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceInvocationException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceInvocationException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceInvocationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceInvocationException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Resources.Dfs_messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_CONTENT_FAILED_TO_RETRIEVE_FILE_CONTENT">
            <summary>
              Looks up a localized string similar to Failed to retrieve file content: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_CONTENT_IO_ERROR">
            <summary>
              Looks up a localized string similar to Content IO operation failed for file: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_CONTENT_UNSUPPORTED_TRANSFORMATION">
            <summary>
              Looks up a localized string similar to Unsupported transformation: &quot;{0}&quot; -&gt; &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_EXCEPTION_COULD_NOT_BE_DESERIALIZED">
            <summary>
              Looks up a localized string similar to Service exception could not be deserialized..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_INVOCATION_FAILED_MULTIPLE_HTTP_SESSIONS_PROVIDED">
            <summary>
              Looks up a localized string similar to Can not execute UCF call: provided HTTP session id &quot;{0}&quot; overrides original HTTP session id &quot;{1}&quot;. Please use original HTTP session for UCF calls. Doing otherwise will cause the call to fail in load-balanced environments..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_JAVA_EXE_MISSING">
            <summary>
              Looks up a localized string similar to Cant find java.exe at &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_JAVA_HOME_MISSING">
            <summary>
              Looks up a localized string similar to JAVA_HOME or JRE_HOME environment variable is not found..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_NO_JSESSIONID_COOKIE">
            <summary>
              Looks up a localized string similar to Service invocation did not return a HTTP session id cookie (JSESSIONID).
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_SERVICE_CONTEXT_REGISTRATION_FAILED">
            <summary>
              Looks up a localized string similar to Failed registering service context to: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_SERVICE_METHOD_INVOCATION_FAILED">
            <summary>
              Looks up a localized string similar to Service method &quot;{0}&quot; invocation failed..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_TYPE_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Required type &quot;{0}&quot; was not found and therefore could not be created..
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_UCF_FAILED_TO_RETRIEVE_SESSION_ID">
            <summary>
              Looks up a localized string similar to Failed to retrieve session id from AgentService at &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.Dfs_messages.E_UCF_FAILED_TO_RETRIEVE_UCF_ID">
            <summary>
              Looks up a localized string similar to Failed to retrieve UCF id..
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_rt_AuthenticationException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.AuthenticationException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_rt_ServiceContextLookupException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.ServiceContextLookupException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_rt_ServiceException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.ServiceException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_rt_ServiceInvocationException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.ServiceInvocationException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_rt_ServiceRegistrationException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.ServiceRegistrationException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_CacheException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.CacheException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_CoreServiceException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.CoreServiceException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_impl_execution_proto_dfc_DfcOperationException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.DfcOperationException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_IncompletePayloadException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.IncompletePayloadException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_QueryValidationException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.QueryValidationException.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_UnsupportedServiceOperation">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.ServiceExceptions.com_emc_documentum_fs_services_core_VersionedObjectException">
            <summary>
              Looks up a localized string similar to Emc.Documentum.FS.Runtime.VersionedObjectException.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Resources.UcfLauncher">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.UcfLauncher.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Emc.Documentum.FS.Runtime.Resources.UcfLauncher.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.AgentServicePort">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.getHttpSessionIdRequest">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.getHttpSessionIdResponse">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.getStatusRequest">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.getStatusResponse">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.AgentServicePortChannel">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.AgentServicePortClient">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.ContextRegistryServicePort">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.registerRequest">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.registerResponse">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.lookupRequest">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.lookupResponse">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.unregisterRequest">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.unregisterResponse">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.ContextRegistryServicePortChannel">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.Services.ContextRegistryServicePortClient">
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.AuthenticationException">
            <summary>
            Exception which is raised when authentication errors occurs.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.AuthenticationException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.AuthenticationException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.AuthenticationException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.AuthenticationException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.CacheException">
            <summary>
            DFS Exception which is raised when something is wrong with QueryService
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.CoreServiceException">
            <summary>
            Root Exception for DFS core services.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CoreServiceException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CoreServiceException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CoreServiceException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CoreServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CoreServiceException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CacheException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CacheException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CacheException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CacheException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.CacheException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.DfcOperationException">
            <summary>
            PRIVATE IMPLEMENTATION
            </summary>
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.DfcOperationException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.DfcOperationException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.DfcOperationException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.DfcOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.DfcOperationException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.DfsExceptionHolder">
            <summary>
            DfsExceptionHolder is a part of SerializableException and it stores exception's details.
            Private implementation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ExceptionsHolder">
            <summary>
            Holds SerializableException.
            Private implementation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.IncompletePayloadException">
            <summary>
            IncompletePayloadException is raised when incomplete payload happens
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.IncompletePayloadException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.IncompletePayloadException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.IncompletePayloadException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.IncompletePayloadException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.IncompletePayloadException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.QueryValidationException">
            <summary>
            QueryValidationException is raised in QueryService when query validation fails
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.QueryValidationException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.QueryValidationException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.QueryValidationException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.QueryValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.QueryValidationException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ResourceLookupException">
            <summary>
            Private implementation.
            </summary>
            <exclude/>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ResourceLookupException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ResourceLookupException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ResourceLookupException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ResourceLookupException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ResourceLookupException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.SerializableException">
            <summary>
            SerializableException is used for storing raised exception details and transferring them through SOAP<p/>
            Private implementation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ServiceContextLookupException">
            <summary>
            Exception which is raised when service context lookup failed
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceContextLookupException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceContextLookupException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceContextLookupException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceContextLookupException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceContextLookupException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.ServiceRegistrationException">
            <summary>
            Exception which is raised when service context registration fails
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceRegistrationException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceRegistrationException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceRegistrationException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceRegistrationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.ServiceRegistrationException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.StackTraceHolder">
            <summary>
            StackTraceHolder is a part of DfsExceptionHolder and it contains exception's stacktrace data.
            Private implementation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.UnknownServiceException">
            <summary>
            This exception is raised only in case when some exception was instantiated on server side and
            there is no analog for it on .NET client side. For example if java.lang.Exception or
            java.lang.NullPointerException were instantiated on server side, 
            they are transformed to UnknownServiceException on client side.
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnknownServiceException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnknownServiceException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnknownServiceException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnknownServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnknownServiceException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation">
            <summary>
            UnsupportedServiceOperation is raised when operation in service is not supported
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.UnsupportedServiceOperation.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="T:Emc.Documentum.FS.Runtime.VersionedObjectException">
            <summary>
            VersionedObjectException is raised in Version Control Service
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.VersionedObjectException.#ctor(System.String)">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.VersionedObjectException.#ctor(System.String,System.Object[])">
            <summary>
            Creates exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.VersionedObjectException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.VersionedObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
        <member name="M:Emc.Documentum.FS.Runtime.VersionedObjectException.#ctor(System.Exception)">
            <summary>
            Creates chained exception
            </summary>
        </member>
    </members>
</doc>
